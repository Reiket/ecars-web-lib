{"version":3,"file":"NavLink.test.js","sources":["../../../lib/components/NavLink/NavLink.test.tsx"],"sourcesContent":["import {cleanup, render} from '@testing-library/react';\nimport {NavLink} from './NavLink';\nimport {MemoryRouter, Route, Routes} from 'react-router';\nimport {MOCK_ROUTE_LINK} from '@/components/NavLink/constants';\n\ndescribe('NavLink component', () => {\n  afterEach(cleanup);\n  test('renders correctly with given children', () => {\n    const {container, getByText} = render(\n      <MemoryRouter>\n        <NavLink to=\"/test\">Test Link</NavLink>\n      </MemoryRouter>,\n    );\n\n    expect(getByText('Test Link')).toBeInTheDocument();\n    expect(container).toMatchSnapshot();\n  });\n\n  test(\"applies 'link-active' class when the link is active\", () => {\n    const {container, getByText} = render(\n      <MemoryRouter initialEntries={[MOCK_ROUTE_LINK]}>\n        <Routes>\n          <Route\n            path={MOCK_ROUTE_LINK}\n            element={<NavLink to={MOCK_ROUTE_LINK}>Active Link</NavLink>}\n          />\n        </Routes>\n      </MemoryRouter>,\n    );\n\n    expect(getByText('Active Link')).toHaveClass('_active');\n    expect(container).toMatchSnapshot();\n  });\n\n  test(\"does not apply 'link-active' class when the link is not active\", () => {\n    const testRoute = '/other';\n    const {container, getByText} = render(\n      <MemoryRouter initialEntries={[testRoute]}>\n        <NavLink to={MOCK_ROUTE_LINK}>Test Link</NavLink>\n      </MemoryRouter>,\n    );\n\n    expect(getByText('Test Link')).not.toHaveClass('_active');\n    expect(container).toMatchSnapshot();\n  });\n});\n"],"names":["cleanup","container","getByText","render","MemoryRouter","jsx","NavLink","MOCK_ROUTE_LINK","Routes","Route","testRoute"],"mappings":";;;;;AAKA,SAAS,qBAAqB,MAAM;AAClC,YAAUA,CAAO,GACjB,KAAK,yCAAyC,MAAM;AAC5C,UAAA,EAAC,WAAAC,GAAW,WAAAC,EAAA,IAAaC;AAAA,wBAC5BC,GACC,EAAA,UAAA,gBAAAC,EAACC,KAAQ,IAAG,SAAQ,sBAAS,CAAA,EAC/B,CAAA;AAAA,IACF;AAEA,WAAOJ,EAAU,WAAW,CAAC,EAAE,kBAAkB,GAC1C,OAAAD,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GAED,KAAK,uDAAuD,MAAM;AAC1D,UAAA,EAAC,WAAAA,GAAW,WAAAC,EAAA,IAAaC;AAAA,wBAC5BC,GAAa,EAAA,gBAAgB,CAACG,CAAe,GAC5C,4BAACC,GACC,EAAA,UAAA,gBAAAH;AAAA,QAACI;AAAA,QAAA;AAAA,UACC,MAAMF;AAAA,UACN,SAAS,gBAAAF,EAACC,GAAQ,EAAA,IAAIC,GAAiB,UAAW,cAAA,CAAA;AAAA,QAAA;AAAA,SAEtD,EACF,CAAA;AAAA,IACF;AAEA,WAAOL,EAAU,aAAa,CAAC,EAAE,YAAY,SAAS,GAC/C,OAAAD,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GAED,KAAK,kEAAkE,MAAM;AAC3E,UAAMS,IAAY,UACZ,EAAC,WAAAT,GAAW,WAAAC,EAAA,IAAaC;AAAA,MAC7B,gBAAAE,EAACD,GAAa,EAAA,gBAAgB,CAACM,CAAS,GACtC,UAAA,gBAAAL,EAACC,GAAQ,EAAA,IAAIC,GAAiB,UAAA,YAAS,CAAA,EACzC,CAAA;AAAA,IACF;AAEA,WAAOL,EAAU,WAAW,CAAC,EAAE,IAAI,YAAY,SAAS,GACjD,OAAAD,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC;AACH,CAAC;"}