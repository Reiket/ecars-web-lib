{"version":3,"file":"Input.js","sources":["../../../lib/components/Input/Input.tsx"],"sourcesContent":["import {cn} from '@/services/helpers';\nimport type {ChangeEvent, FC, HTMLInputTypeAttribute} from 'react';\nimport {INPUT_TEST_ID} from '@/components/Input/constants';\nimport type {ElementProps} from '@/services/types';\n\ninterface Props extends ElementProps {\n  type?: HTMLInputTypeAttribute;\n  value?: string;\n  onChange?: (value: string) => void;\n  name?: string;\n  placeholder?: string;\n  id?: string;\n  disabled?: boolean;\n  hasError?: boolean;\n}\n\nexport const Input: FC<Props> = ({\n  value,\n  onChange,\n  hasError,\n  placeholder,\n  block,\n  disabled = false,\n  type = 'text',\n  id = 'input',\n  name = 'input',\n}) => {\n  const classNames = cn(block, 'input', {\n    'error': hasError,\n  });\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(event.currentTarget.value);\n    }\n  };\n  return (\n    <input\n      onChange={handleChange}\n      disabled={disabled}\n      autoComplete=\"off\"\n      data-testid={INPUT_TEST_ID}\n      className={classNames}\n      id={id}\n      name={name}\n      placeholder={placeholder}\n      value={value}\n      type={type}\n    />\n  );\n};\n"],"names":["Input","value","onChange","hasError","placeholder","block","disabled","type","id","name","classNames","cn","jsx","event","INPUT_TEST_ID"],"mappings":";;;AAgBO,MAAMA,IAAmB,CAAC;AAAA,EAC/B,OAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,aAAAC;AAAA,EACA,OAAAC;AAAA,EACA,UAAAC,IAAW;AAAA,EACX,MAAAC,IAAO;AAAA,EACP,IAAAC,IAAK;AAAA,EACL,MAAAC,IAAO;AACT,MAAM;AACE,QAAAC,IAAaC,EAAGN,GAAO,SAAS;AAAA,IACpC,OAASF;AAAA,EAAA,CACV;AAOC,SAAA,gBAAAS;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,UAPiB,CAACC,MAAyC;AAC7D,QAAIX,KACOA,EAAAW,EAAM,cAAc,KAAK;AAAA,MAEtC;AAAA,MAII,UAAAP;AAAA,MACA,cAAa;AAAA,MACb,eAAaQ;AAAA,MACb,WAAWJ;AAAA,MACX,IAAAF;AAAA,MACA,MAAAC;AAAA,MACA,aAAAL;AAAA,MACA,OAAAH;AAAA,MACA,MAAAM;AAAA,IAAA;AAAA,EACF;AAEJ;"}