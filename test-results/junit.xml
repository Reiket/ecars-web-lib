<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="55" failures="0" errors="0" time="0.966929">
    <testsuite name="lib/components/FilterButton/FilterButton.test.tsx" timestamp="2025-08-30T16:38:48.238Z" hostname="ASUS" tests="3" failures="0" errors="0" skipped="0" time="0.1263694">
        <testcase classname="lib/components/FilterButton/FilterButton.test.tsx" name="FilterButton component &gt; renders the filter component correctly" time="0.0399233">
        </testcase>
        <testcase classname="lib/components/FilterButton/FilterButton.test.tsx" name="FilterButton component &gt; renders RightIcon component" time="0.003779">
        </testcase>
        <testcase classname="lib/components/FilterButton/FilterButton.test.tsx" name="FilterButton component &gt; calls onClick when clicked" time="0.081255">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/Select/Select.test.tsx" timestamp="2025-08-30T16:38:48.240Z" hostname="ASUS" tests="11" failures="0" errors="0" skipped="0" time="0.148558">
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; should input is disabled has a placeholder" time="0.0563338">
            <system-err>
Warning: Each child in a list should have a unique &quot;key&quot; prop.

Check the top-level render call using &lt;SelectBlock&gt;. It was passed a child from SelectComponent. See https://reactjs.org/link/warning-keys for more information.
    at SelectInput (D:\IT-Programming\React\site\ecars-web-lib\lib\components\Select\components\SelectInput.tsx:3:24)
    at D:\IT-Programming\React\site\ecars-web-lib\lib\services\hoc\withBlockClass.tsx:21:47
    at div
    at SelectWrapper (D:\IT-Programming\React\site\ecars-web-lib\lib\components\Select\components\SelectWrapper.tsx:5:26)
    at SelectComponent (D:\IT-Programming\React\site\ecars-web-lib\lib\components\Select\SelectComponent.tsx:12:3)

            </system-err>
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; should input is disabled has no placeholder" time="0.0084945">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; should input is not disabled has a placeholder" time="0.0069017">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; should input is not disabled has no placeholder" time="0.0059384">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; calls onChange and handleSelect when input changes" time="0.0156942">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; calls onClick when block is clicked" time="0.0150941">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; filters options when hasSearch is true and value is typed" time="0.0100275">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; does not render list if search yields no match" time="0.0055938">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; closes list on outside click" time="0.0066236">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; displays the provided value in the input and highlights the corresponding option" time="0.0103117">
        </testcase>
        <testcase classname="lib/components/Select/Select.test.tsx" name="Select Component &gt; opens the select when typing in the input" time="0.0052726">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/Accordion/AccordionComponent.test.tsx" timestamp="2025-08-30T16:38:48.242Z" hostname="ASUS" tests="4" failures="0" errors="0" skipped="0" time="0.1179464">
        <testcase classname="lib/components/Accordion/AccordionComponent.test.tsx" name="Accordion Component &gt; renders the accordion component and title, text correctly" time="0.0438681">
        </testcase>
        <testcase classname="lib/components/Accordion/AccordionComponent.test.tsx" name="Accordion Component &gt; should open the content" time="0.0521068">
        </testcase>
        <testcase classname="lib/components/Accordion/AccordionComponent.test.tsx" name="Accordion Component &gt; should close the content" time="0.0069173">
        </testcase>
        <testcase classname="lib/components/Accordion/AccordionComponent.test.tsx" name="Accordion Component &gt; triggers onClick handler when title is clicked" time="0.0132392">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/FilterAccordion/FilterAccordionComponent.test.tsx" timestamp="2025-08-30T16:38:48.244Z" hostname="ASUS" tests="4" failures="0" errors="0" skipped="0" time="0.1374808">
        <testcase classname="lib/components/FilterAccordion/FilterAccordionComponent.test.tsx" name="Filter Accordion Component &gt; renders the filter accordion component and title, text correctly" time="0.0558632">
            <system-err>
Warning: Each child in a list should have a unique &quot;key&quot; prop.

Check the top-level render call using &lt;FilterAccordionBlock&gt;. It was passed a child from FilterAccordionComponent. See https://reactjs.org/link/warning-keys for more information.
    at h2
    at D:\IT-Programming\React\site\ecars-web-lib\lib\services\hoc\withBlockClass.tsx:21:47
    at div
    at FilterAccordionLayout (D:\IT-Programming\React\site\ecars-web-lib\lib\components\FilterAccordion\components\FilterAccordionLayout.tsx:4:34)
    at FilterAccordionComponent (D:\IT-Programming\React\site\ecars-web-lib\lib\components\FilterAccordion\FilterAccordionComponent.tsx:4:37)

            </system-err>
        </testcase>
        <testcase classname="lib/components/FilterAccordion/FilterAccordionComponent.test.tsx" name="Filter Accordion Component &gt; should open the content" time="0.0562642">
        </testcase>
        <testcase classname="lib/components/FilterAccordion/FilterAccordionComponent.test.tsx" name="Filter Accordion Component &gt; should close the content" time="0.0052697">
        </testcase>
        <testcase classname="lib/components/FilterAccordion/FilterAccordionComponent.test.tsx" name="Filter Accordion Component &gt; triggers onClick handler when arrow is clicked" time="0.0184477">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/Pagination/Pagination.test.tsx" timestamp="2025-08-30T16:38:48.245Z" hostname="ASUS" tests="6" failures="0" errors="0" skipped="0" time="0.1015554">
        <testcase classname="lib/components/Pagination/Pagination.test.tsx" name="Pagination component &gt; renders component with all page buttons and arrows" time="0.0512695">
        </testcase>
        <testcase classname="lib/components/Pagination/Pagination.test.tsx" name="Pagination component &gt; disables prev arrow on first page" time="0.0128799">
        </testcase>
        <testcase classname="lib/components/Pagination/Pagination.test.tsx" name="Pagination component &gt; calls onPageClick when page button is clicked" time="0.0142595">
        </testcase>
        <testcase classname="lib/components/Pagination/Pagination.test.tsx" name="Pagination component &gt; marks the current page as selected" time="0.0078985">
        </testcase>
        <testcase classname="lib/components/Pagination/Pagination.test.tsx" name="Pagination component &gt; calls onPrevClick and onNextClick" time="0.0051867">
        </testcase>
        <testcase classname="lib/components/Pagination/Pagination.test.tsx" name="Pagination component &gt; disables all buttons and arrows when loading" time="0.0074419">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/LinkWithIcon/LinkWithIcon.test.tsx" timestamp="2025-08-30T16:38:48.246Z" hostname="ASUS" tests="4" failures="0" errors="0" skipped="0" time="0.0697464">
        <testcase classname="lib/components/LinkWithIcon/LinkWithIcon.test.tsx" name="LinkWithIcon component &gt; renders component correctly" time="0.0442952">
        </testcase>
        <testcase classname="lib/components/LinkWithIcon/LinkWithIcon.test.tsx" name="LinkWithIcon component &gt; renders LeftIcon when provided" time="0.0112738">
        </testcase>
        <testcase classname="lib/components/LinkWithIcon/LinkWithIcon.test.tsx" name="LinkWithIcon component &gt; renders RightIcon when provided" time="0.006448">
        </testcase>
        <testcase classname="lib/components/LinkWithIcon/LinkWithIcon.test.tsx" name="LinkWithIcon component &gt; renders both LeftIcon and RightIcon when provided" time="0.0053254">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/Checkbox/CheckboxComponent.test.tsx" timestamp="2025-08-30T16:38:48.247Z" hostname="ASUS" tests="9" failures="0" errors="0" skipped="0" time="0.0952099">
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is disabled, is checked, has an error and input has an error class" time="0.0421869">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is disabled, is checked, has no error" time="0.0075778">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is disabled, is not checked, has an error and input has an error class" time="0.0107496">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is disabled, is not checked, has no error" time="0.0050128">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is not disabled, is checked, has an error and input has an error class" time="0.0071248">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is not disabled, is checked, has no error" time="0.0056374">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is not disabled, is not checked, has an error and input has an error class" time="0.0038336">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; renders checkbox is not disabled, is not checked, has no error" time="0.0035795">
        </testcase>
        <testcase classname="lib/components/Checkbox/CheckboxComponent.test.tsx" name="Checkbox component &gt; onChange event changed checked when user clicks on checkbox" time="0.0073059">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/SliderNavigate/SliderNavigate.test.tsx" timestamp="2025-08-30T16:38:48.250Z" hostname="ASUS" tests="4" failures="0" errors="0" skipped="0" time="0.0396367">
        <testcase classname="lib/components/SliderNavigate/SliderNavigate.test.tsx" name="Slider Navigate component &gt; renders correctly" time="0.0301093">
        </testcase>
        <testcase classname="lib/components/SliderNavigate/SliderNavigate.test.tsx" name="Slider Navigate component &gt; renders no buttons if placement is empty" time="0.0021537">
        </testcase>
        <testcase classname="lib/components/SliderNavigate/SliderNavigate.test.tsx" name="Navigate Button component &gt; renders correctly with left placement" time="0.0036276">
        </testcase>
        <testcase classname="lib/components/SliderNavigate/SliderNavigate.test.tsx" name="Navigate Button component &gt; renders correctly with right placement" time="0.002283">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/ButtonWithIcon/ButtonWithIcon.test.tsx" timestamp="2025-08-30T16:38:48.252Z" hostname="ASUS" tests="4" failures="0" errors="0" skipped="0" time="0.0391403">
        <testcase classname="lib/components/ButtonWithIcon/ButtonWithIcon.test.tsx" name="ButtonWithIcon component &gt; renders component correctly" time="0.0237737">
        </testcase>
        <testcase classname="lib/components/ButtonWithIcon/ButtonWithIcon.test.tsx" name="ButtonWithIcon component &gt; renders LeftIcon when provided" time="0.0075334">
        </testcase>
        <testcase classname="lib/components/ButtonWithIcon/ButtonWithIcon.test.tsx" name="ButtonWithIcon component &gt; renders RightIcon when provided" time="0.0036636">
        </testcase>
        <testcase classname="lib/components/ButtonWithIcon/ButtonWithIcon.test.tsx" name="ButtonWithIcon component &gt; renders both LeftIcon and RightIcon when provided" time="0.0028895">
        </testcase>
    </testsuite>
    <testsuite name="lib/components/Dropdown/Dropdown.test.tsx" timestamp="2025-08-30T16:38:48.254Z" hostname="ASUS" tests="6" failures="0" errors="0" skipped="0" time="0.0912857">
        <testcase classname="lib/components/Dropdown/Dropdown.test.tsx" name="Dropdown Component &gt; renders the dropdown component correctly in dark theme" time="0.0466969">
        </testcase>
        <testcase classname="lib/components/Dropdown/Dropdown.test.tsx" name="Dropdown Component &gt; renders the dropdown component correctly in light theme" time="0.00816">
        </testcase>
        <testcase classname="lib/components/Dropdown/Dropdown.test.tsx" name="Dropdown Component &gt; calls handleOpen when block is clicked" time="0.0150815">
        </testcase>
        <testcase classname="lib/components/Dropdown/Dropdown.test.tsx" name="Dropdown Component &gt; closes list on outside click" time="0.0044539">
        </testcase>
        <testcase classname="lib/components/Dropdown/Dropdown.test.tsx" name="Dropdown Component &gt; highlights the selected option correctly" time="0.0055197">
        </testcase>
        <testcase classname="lib/components/Dropdown/Dropdown.test.tsx" name="Dropdown Component &gt; calls onSelect when an option is clicked" time="0.0087002">
        </testcase>
    </testsuite>
</testsuites>
