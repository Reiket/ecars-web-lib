{"version":3,"file":"constants-Cbrgw4tM.cjs","sources":["../lib/components/Checkbox/CheckboxComponent.tsx","../lib/components/Checkbox/components/CheckboxBlock.tsx","../lib/components/Checkbox/components/CheckboxInput.tsx","../lib/components/Checkbox/constants.ts"],"sourcesContent":["import type {FC} from 'react';\nimport type {CheckboxProps} from '@/components/Checkbox/constants';\nimport {Checkbox} from '@/components/Checkbox/constants';\n\nexport const CheckboxComponent: FC<CheckboxProps> = ({id, block, ...props}) => {\n  return (\n    <Checkbox.Block\n      htmlFor={id}\n      block={block}\n    >\n      <Checkbox.Input\n        {...props}\n        id={id}\n      />\n      <Checkbox.Indicator />\n    </Checkbox.Block>\n  );\n};\n","import type {FC, ReactNode} from 'react';\nimport {CHECKBOX_TEST_ID} from '@/components/Checkbox/constants';\nimport type {ElementProps} from '@/services/types';\nimport {cn} from '@/services/helpers';\n\ninterface Props extends ElementProps {\n  htmlFor?: string;\n  children: ReactNode;\n}\n\nexport const CheckboxBlock: FC<Props> = ({children, block, htmlFor = 'checkbox'}) => {\n  const classNames = cn(block, 'checkbox');\n  return (\n    <label\n      data-testid={CHECKBOX_TEST_ID}\n      className={classNames}\n      htmlFor={htmlFor}\n    >\n      {children}\n    </label>\n  );\n};\n","import type {FC, ChangeEvent} from 'react';\nimport {cn} from '@/services/helpers';\nimport type {CheckboxProps} from '@/components/Checkbox/constants';\nimport {CHECKBOX_TEST_INPUT_ID} from '@/components/Checkbox/constants';\n\nexport const CheckboxInput: FC<CheckboxProps> = ({\n  onChange,\n  id = 'checkbox',\n  checked = false,\n  disabled = false,\n  name = 'checkbox',\n  hasError = false,\n}) => {\n  const classNames = cn('', 'checkbox__input', {\n    'error': hasError,\n  });\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e.target.checked);\n    }\n  };\n  return (\n    <input\n      data-testid={CHECKBOX_TEST_INPUT_ID}\n      name={name}\n      disabled={disabled}\n      className={classNames}\n      checked={checked}\n      onChange={handleChange}\n      id={id}\n      type=\"checkbox\"\n    />\n  );\n};\n","import {CheckboxComponent} from '@/components/Checkbox/CheckboxComponent';\nimport {CheckboxIndicator} from '@/components/Checkbox/components/CheckboxIndicator';\nimport {CheckboxBlock} from '@/components/Checkbox/components/CheckboxBlock';\nimport {CheckboxInput} from '@/components/Checkbox/components/CheckboxInput';\nimport type {ElementProps} from '@/services/types';\n\nexport const Checkbox = Object.assign(CheckboxComponent, {\n  Block: CheckboxBlock,\n  Indicator: CheckboxIndicator,\n  Input: CheckboxInput,\n});\n\nexport interface CheckboxProps extends ElementProps {\n  name?: string;\n  id?: string;\n  disabled?: boolean;\n  onChange?: (checked: boolean) => void;\n  checked?: boolean;\n  hasError?: boolean;\n}\n\nexport const CHECKBOX_TEST_ID = 'checkboxTestId';\nexport const CHECKBOX_TEST_INPUT_ID = 'checkboxTestInputId';\n"],"names":["CheckboxComponent","id","block","props","jsxs","Checkbox","Block","htmlFor","children","jsx","Input","Indicator","CheckboxBlock","classNames","cn","CHECKBOX_TEST_ID","className","CheckboxInput","onChange","t","checked","disabled","name","hasError","error","CHECKBOX_TEST_INPUT_ID","e","target","type","Object","assign","CheckboxIndicator"],"mappings":"sJAIaA,EAAAA,EAAuC,CAAEC,CAAAA,GAAAA,EAAIC,WAAUC,CAEhEC,IAAAA,EAAAA,KAACC,EAASC,MAAT,CACCC,QAASN,EACTC,QAEAM,SAAA,CAAAC,EAAAA,IAACJ,EAASK,MAAT,CACKP,GAAAA,EACJF,OAEFQ,MAACJ,EAASM,UAAT,CAAmB,CAAA,CAAA,CAAA,CAAA,ECJbC,EAA2B,CAAA,CAAEJ,WAAUN,MAAOK,EAAAA,QAAAA,EAAU,UAC7D,IAAA,CAAA,MAAAM,EAAaC,EAAAA,GAAGZ,EAAO,YAE3B,OAAAO,EAAAA,IAAC,QAAA,CACC,cAAaM,EACbC,UAAWH,EACXN,QAECC,EAAAA,SAAAA,CAAAA,CAAAA,CACH,ECdSS,EAAmC,CAC9CC,CAAAA,SAAAA,EACAjB,GAAKkB,EAAA,WACLC,aACAC,SAAAA,EAAAA,GACAC,KAAAA,EAAO,WACPC,SAAAA,EAAAA,EAEM,IAAA,CAAA,MAAAV,EAAaC,EAAAA,GAAG,GAAI,kBAAmB,CAC3CU,MAASD,CAQT,CAAA,EAAA,OAAAd,EAAAA,IAAC,QAAA,CACC,cAAagB,EACbH,KAAAA,EACAD,SACAL,EAAAA,UAAWH,EACXO,QACAF,EAAAA,SAZkBQ,GAChBR,CAAAA,GACOA,EAAAQ,EAAEC,OAAOP,OAAAA,CAAO,EAWzBnB,GACA2B,EAAAA,KAAK,UACP,CAAA,CAAA,ECzBSvB,EAAWwB,OAAOC,OAAO9B,EAAmB,CACvDM,MAAOM,EACPD,UAAWoB,EAAAA,kBACXrB,MAAOO,CAYIF,CAAAA,EAAAA,EAAmB,iBACnBU,EAAyB"}