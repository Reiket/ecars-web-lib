{"version":3,"file":"SelectComponent-BTwBiVSD.js","sources":["../lib/components/Select/components/SelectList.tsx","../lib/components/Select/components/SelectWrapper.tsx","../lib/components/Select/constants.ts","../lib/components/Select/SelectComponent.tsx"],"sourcesContent":["import type {FC} from 'react';\nimport {Select} from '@/components/Select/constants';\n\nexport interface Props {\n  options: string[] | null;\n  onClick: (value: string) => void;\n  value: string;\n}\n\nexport const SelectList: FC<Props> = ({options, onClick, value}) => {\n  if (!options) {\n    return (\n      <ul className=\"select__options\">\n        <li className=\"select__option select__option_empty\">Nothing found</li>\n      </ul>\n    );\n  }\n\n  return (\n    <ul className=\"select__options\">\n      {options.map((option) => {\n        const isSelected = option === value;\n        const onOptionClick = () => {\n          onClick(option);\n        };\n        return (\n          <Select.Option\n            key={option}\n            isSelected={isSelected}\n            onOptionClick={onOptionClick}\n            option={option}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n","import type {FC, ReactNode} from 'react';\nimport {SELECT_TEST_ID} from '@/components/Select/constants';\nimport {cn} from '@/services/helpers';\nimport {useClickOutside} from '@/services/hooks/useClickOutside';\nimport type {ElementProps} from '@/services/types';\n\nexport interface Props extends ElementProps {\n  children: ReactNode;\n  onClickOutside: (isOpen: boolean) => void;\n  isOpen: boolean;\n  disabled?: boolean;\n}\n\nexport const SelectWrapper: FC<Props> = ({children, isOpen, onClickOutside, block, disabled = false}) => {\n  const selectRef = useClickOutside(onClickOutside);\n  return (\n    <div\n      ref={selectRef}\n      data-testid={SELECT_TEST_ID}\n      className={cn(block, 'select', {\n        '_open': isOpen,\n        'disabled': disabled,\n      })}\n    >\n      {children}\n    </div>\n  );\n};\n","import {SelectComponent} from '@/components/Select/SelectComponent';\nimport {SelectList} from '@/components/Select/components/SelectList';\nimport {SelectOption} from '@/components/Select/components/SelectOption';\nimport {SelectInput} from '@/components/Select/components/SelectInput';\nimport {SelectArrow} from '@/components/Select/components/SelectArrow';\nimport {SelectWrapper} from '@/components/Select/components/SelectWrapper';\nimport {SelectBlock} from '@/components/Select/components/SelectBlock';\nimport {withBlockClass} from '@/services/hoc/withBlockClass';\n\nexport const SELECT_TEST_ID = 'selectTestId';\n\nconst SelectBlockHOC = withBlockClass(SelectBlock, 'select');\n\nexport const Select = Object.assign(SelectComponent, {\n  List: SelectList,\n  Option: SelectOption,\n  Input: SelectInput,\n  Arrow: SelectArrow,\n  Wrapper: SelectWrapper,\n  Block: SelectBlockHOC,\n});\n","import {Select} from '@/components/Select/constants';\nimport type {FC} from 'react';\nimport {useMemo} from 'react';\nimport type {InputProps} from '@/components/Input/Input';\n\nexport interface Props extends InputProps {\n  isOpen: boolean;\n  options: string[];\n  onClick: () => void;\n  onChange: (value: string) => void;\n  value: string;\n  handleSelect: (isOpen: boolean) => void;\n  onClickToOptions: (value: string) => void;\n  hasSearch?: boolean;\n}\n\nconst getFilteredOptions = (options: string[], value: string, hasSearch: boolean): string[] | null => {\n  if (!hasSearch || !value.trim()) {\n    return options;\n  }\n  const filtered = options.filter((option) => option.toLowerCase().includes(value.toLowerCase()));\n  return filtered.length > 0 ? filtered : null;\n};\n\nexport const SelectComponent: FC<Props> = ({\n  options,\n  onClick,\n  handleSelect,\n  onClickToOptions,\n  isOpen,\n  value,\n  onChange,\n  block,\n  id = 'select',\n  name = 'select',\n  disabled,\n  hasSearch = false,\n  ...props\n}) => {\n  const filteredOptions = useMemo(() => getFilteredOptions(options, value, hasSearch), [options, value, hasSearch]);\n  const handleSelectChange = (value: string) => {\n    onChange(value);\n    handleSelect(hasSearch);\n  };\n  return (\n    <Select.Wrapper\n      onClickOutside={handleSelect}\n      isOpen={isOpen}\n      block={block}\n      disabled={disabled}\n    >\n      <Select.Block\n        onClick={onClick}\n        block=\"select\"\n      >\n        <Select.Input\n          disabled={disabled}\n          id={id}\n          name={name}\n          value={value}\n          onChange={handleSelectChange}\n          hasSearch={hasSearch}\n          {...props}\n        />\n        <Select.Arrow />\n      </Select.Block>\n      <Select.List\n        options={filteredOptions}\n        onClick={onClickToOptions}\n        value={value}\n      />\n    </Select.Wrapper>\n  );\n};\n"],"names":["SelectList","options","onClick","value","option","isSelected","onOptionClick","jsx","Select","SelectWrapper","children","isOpen","onClickOutside","block","disabled","selectRef","useClickOutside","SELECT_TEST_ID","cn","SelectBlockHOC","withBlockClass","SelectBlock","SelectComponent","SelectOption","SelectInput","SelectArrow","getFilteredOptions","hasSearch","filtered","handleSelect","onClickToOptions","onChange","id","name","props","filteredOptions","useMemo","handleSelectChange","jsxs"],"mappings":"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"}