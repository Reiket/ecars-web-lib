{"version":3,"file":"Button.js","sources":["../../../lib/components/Button/Button.tsx"],"sourcesContent":["import type {FC, MouseEvent, ReactNode} from 'react';\r\nimport {BUTTON_TEST_ID, ButtonAttributesType, ButtonColorType, ButtonSizeType} from '@/components/Button/constants';\r\nimport {cn} from '@/services/helpers';\r\nimport {ElementProps} from '@/services/types';\r\n\r\nexport interface ButtonProps extends ElementProps {\r\n  size: ButtonSizeType;\r\n  children: ReactNode;\r\n  color: ButtonColorType;\r\n  type?: ButtonAttributesType;\r\n  disabled?: boolean;\r\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  isTransparent?: boolean;\r\n  withIcon?: boolean;\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = ({\r\n  children,\r\n  size,\r\n  color,\r\n  onClick,\r\n  type = 'button',\r\n  disabled = false,\r\n  isTransparent = false,\r\n  withIcon = false,\r\n  block,\r\n}) => {\r\n  const classNames = cn(block, 'button', `button--${size} button--${color}`, {\r\n    'button--transparent': isTransparent,\r\n    'button--icon': withIcon,\r\n  });\r\n  return (\r\n    <button\r\n      data-testid={BUTTON_TEST_ID}\r\n      disabled={disabled}\r\n      type={type}\r\n      className={classNames}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n"],"names":["Button","children","size","color","onClick","type","disabled","isTransparent","withIcon","block","classNames","cn","jsx","BUTTON_TEST_ID","className"],"mappings":";;;AAgBO,MAAMA,IAA0B,GACrCC,UACAC,GAAAA,MAAAA,GACAC,UACAC,SACAC,GAAAA,MAAAA,IAAO,UACPC,UAAW,IAAA,IACXC,uBACAC,UAAAA,IAAAA,IACAC,OAAAA,EAAAA,MAAAA;AAEM,QAAAC,IAAaC,EAAGF,GAAO,UAAU,WAAWP,CAAgBC,YAAAA,CAAAA,IAAS,EACzE,uBAAuBI,GACvB,gBAAgBC,EAGhB,CAAA;AAAA,SAAAI,EAAC,UAAA,EACC,eAAaC,GACbP,UAAAA,GACAD,SACAS,WAAWJ,GACXN,SAECH,GAAAA,UAAAA,EAAAA,CAAAA;AACH;"}