{"version":3,"file":"NavLink.test.js","sources":["../../../lib/components/NavLink/NavLink.test.tsx"],"sourcesContent":["import {cleanup, render} from '@testing-library/react';\r\nimport {NavLink} from './NavLink';\r\nimport {MemoryRouter, Route, Routes} from 'react-router';\r\nimport {MOCK_ROUTE_LINK} from '@/components/NavLink/constants';\r\n\r\ndescribe('NavLink component', () => {\r\n  afterEach(cleanup);\r\n  test('renders correctly with given children', () => {\r\n    const {container, getByText} = render(\r\n      <MemoryRouter>\r\n        <NavLink to=\"/test\">Test Link</NavLink>\r\n      </MemoryRouter>,\r\n    );\r\n\r\n    expect(getByText('Test Link')).toBeInTheDocument();\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n\r\n  test(\"applies 'link-active' class when the link is active\", () => {\r\n    const {container, getByText} = render(\r\n      <MemoryRouter initialEntries={[MOCK_ROUTE_LINK]}>\r\n        <Routes>\r\n          <Route\r\n            path={MOCK_ROUTE_LINK}\r\n            element={<NavLink to={MOCK_ROUTE_LINK}>Active Link</NavLink>}\r\n          />\r\n        </Routes>\r\n      </MemoryRouter>,\r\n    );\r\n\r\n    expect(getByText('Active Link')).toHaveClass('_active');\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n\r\n  test(\"does not apply 'link-active' class when the link is not active\", () => {\r\n    const testRoute = '/other';\r\n    const {container, getByText} = render(\r\n      <MemoryRouter initialEntries={[testRoute]}>\r\n        <NavLink to={MOCK_ROUTE_LINK}>Test Link</NavLink>\r\n      </MemoryRouter>,\r\n    );\r\n\r\n    expect(getByText('Test Link')).not.toHaveClass('_active');\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n});\r\n"],"names":["describe","afterEach","cleanup","test","container","getByText","render","MemoryRouter","children","jsx","NavLink","to","expect","toBeInTheDocument","toMatchSnapshot","initialEntries","MOCK_ROUTE_LINK","Routes","Route","path","element","toHaveClass","not"],"mappings":";;;;;AAKAA,SAAS,qBAAqB,MAC5BC;AAAAA,YAAUC,CACVC,GAAAA,KAAK,yCAAyC,MAAA;AACtC,UAAAC,EAAAA,WAACA,GAAWC,WAAAA,EAAaC,IAAAA,IAC5BC,GACC,EAAAC,UAAAC,EAACC,KAAQC,IAAG,SAAQH;AAIxBI,WAAOP,EAAU,WAAcQ,CAAAA,EAAAA,kBAAAA,GACxBD,OAAAR,CAAAA,EAAWU,gBAAgB;AAAA,EAAA,CAAA,GAGpCX,KAAK,uDAAuD,MACpD;AAAA,UAAA,EAAAC,WAACA,GAAWC,WAAAA,EAAAA,IAAaC,IAC5BC,GAAa,EAAAQ,gBAAgB,CAACC,IAC7BR,YAACS,GACC,EAAAT,UAAAC,EAACS,GAAA,EACCC,MAAMH,GACNI,SAASX,EAACC,GAAQ,EAAAC,IAAIK,GAAiBR,UAAW,cAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAM1DI,WAAOP,EAAU,aAAgBgB,CAAAA,EAAAA,YAAY,SACtCT,GAAAA,OAAAR,CAAWU,EAAAA,gBAAAA;AAAAA,EAAgB,CAGpCX,GAAAA,KAAK,kEAAkE,MAAA;AACrE,YACMC,WAACA,GAAWC,WAAAA,EAAAA,IAAaC,EAC7BG,EAACF,GAAa,EAAAQ,gBAAgB,CAFd,QAGdP,GAAAA,UAAAC,EAACC,GAAQ,EAAAC,IAAIK,GAAiBR,UAAA,YAIlCI,CAAAA,EAAAA,CAAAA,CAAAA;AAAAA,WAAOP,EAAU,WAAA,CAAA,EAAciB,IAAID,YAAY,SACxCT,GAAAA,OAAAR,CAAWU,EAAAA,gBAAAA;AAAAA,EAAgB,CACnC;AAAA,CAAA;"}