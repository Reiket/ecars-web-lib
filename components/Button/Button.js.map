{"version":3,"file":"Button.js","sources":["../../../lib/components/Button/Button.tsx"],"sourcesContent":["import type {FC, MouseEvent, ReactNode} from 'react';\nimport type {ButtonAttributesType, ButtonColorType, ButtonSizeType} from '@/components/Button/constants';\nimport {BUTTON_TEST_ID} from '@/components/Button/constants';\nimport {cn} from '@/services/helpers';\nimport type {ElementProps} from '@/services/types';\n\nexport interface ButtonProps extends ElementProps {\n  size: ButtonSizeType;\n  children: ReactNode;\n  color: ButtonColorType;\n  type?: ButtonAttributesType;\n  disabled?: boolean;\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\n  isTransparent?: boolean;\n  withIcon?: boolean;\n}\n\nexport const Button: FC<ButtonProps> = ({\n  children,\n  size,\n  color,\n  onClick,\n  type = 'button',\n  disabled = false,\n  isTransparent = false,\n  withIcon = false,\n  block,\n}) => {\n  const classNames = cn(block, 'button', `button--${size} button--${color}`, {\n    'button--transparent': isTransparent,\n    'button--icon': withIcon,\n  });\n  return (\n    <button\n      data-testid={BUTTON_TEST_ID}\n      disabled={disabled}\n      type={type}\n      className={classNames}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":["Button","children","size","color","onClick","type","disabled","isTransparent","withIcon","block","classNames","cn","jsx","BUTTON_TEST_ID"],"mappings":";;;AAiBO,MAAMA,IAA0B,CAAC;AAAA,EACtC,UAAAC;AAAA,EACA,MAAAC;AAAA,EACA,OAAAC;AAAA,EACA,SAAAC;AAAA,EACA,MAAAC,IAAO;AAAA,EACP,UAAAC,IAAW;AAAA,EACX,eAAAC,IAAgB;AAAA,EAChB,UAAAC,IAAW;AAAA,EACX,OAAAC;AACF,MAAM;AACE,QAAAC,IAAaC,EAAGF,GAAO,UAAU,WAAWP,CAAI,YAAYC,CAAK,IAAI;AAAA,IACzE,uBAAuBI;AAAA,IACvB,gBAAgBC;AAAA,EAAA,CACjB;AAEC,SAAA,gBAAAI;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAaC;AAAA,MACb,UAAAP;AAAA,MACA,MAAAD;AAAA,MACA,WAAWK;AAAA,MACX,SAAAN;AAAA,MAEC,UAAAH;AAAA,IAAA;AAAA,EACH;AAEJ;"}