{"version":3,"file":"RouterLink.test.js","sources":["../../../lib/components/RouterLink/RouterLink.test.tsx"],"sourcesContent":["import {cleanup, render, screen} from '@testing-library/react';\nimport {ROUTER_LINK_COLOR, ROUTER_LINK_TEST_ID} from '@/components/RouterLink/constants';\nimport {RouterLink} from '@/components/RouterLink/RouterLink';\nimport {MemoryRouter} from 'react-router';\n\ndescribe('Router Link component', () => {\n  afterEach(cleanup);\n\n  const colors = Object.values(ROUTER_LINK_COLOR);\n  const props = {\n    color: ROUTER_LINK_COLOR.GRAY,\n  };\n  colors.forEach((color) => {\n    const testName = `renders links with ${color} color`;\n    test(testName, () => {\n      const {container} = render(\n        <RouterLink\n          href=\"/\"\n          color={color}\n        >\n          Link\n        </RouterLink>,\n      );\n      const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\n\n      expect(routerLinkElement).toBeInTheDocument();\n      expect(routerLinkElement).toHaveClass(`link--${color}`);\n      expect(container).toMatchSnapshot();\n    });\n  });\n\n  test('applies \"link-icon\" class when withIcon is true', () => {\n    const {container} = render(\n      <RouterLink\n        href=\"/\"\n        withIcon\n        {...props}\n      >\n        Link with Icon\n      </RouterLink>,\n    );\n    const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\n\n    expect(routerLinkElement).toHaveClass('link--icon');\n    expect(container).toMatchSnapshot();\n  });\n  test('renders an external link when \"href\" is provided', () => {\n    const {container} = render(\n      <RouterLink\n        href=\"https://example.com\"\n        {...props}\n      >\n        External Link\n      </RouterLink>,\n    );\n    const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\n\n    expect(routerLinkElement).toBeInTheDocument();\n    expect(routerLinkElement).toHaveAttribute('href', 'https://example.com');\n    expect(routerLinkElement).toHaveAttribute('target', '_blank');\n    expect(routerLinkElement).toHaveAttribute('rel', 'noopener noreferrer');\n    expect(container).toMatchSnapshot();\n  });\n  test('renders an internal link when \"to\" is provided', () => {\n    const {container} = render(\n      <MemoryRouter>\n        <RouterLink\n          to=\"/internal\"\n          {...props}\n        >\n          Internal Link\n        </RouterLink>\n        ,\n      </MemoryRouter>,\n    );\n    const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\n    expect(routerLinkElement).toBeInTheDocument();\n    expect(routerLinkElement).toHaveAttribute('href', '/internal');\n    expect(container).toMatchSnapshot();\n  });\n});\n"],"names":["cleanup","colors","ROUTER_LINK_COLOR","props","color","testName","container","render","jsx","RouterLink","routerLinkElement","screen","ROUTER_LINK_TEST_ID","MemoryRouter"],"mappings":";;;;;AAKA,SAAS,yBAAyB,MAAM;AACtC,YAAUA,CAAO;AAEX,QAAAC,IAAS,OAAO,OAAOC,CAAiB,GACxCC,IAAQ;AAAA,IACZ,OAAOD,EAAkB;AAAA,EAC3B;AACO,EAAAD,EAAA,QAAQ,CAACG,MAAU;AAClB,UAAAC,IAAW,sBAAsBD,CAAK;AAC5C,SAAKC,GAAU,MAAM;AACb,YAAA,EAAC,WAAAC,MAAaC;AAAA,QAClB,gBAAAC;AAAA,UAACC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,OAAAL;AAAA,YACD,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAGH,GACMM,IAAoBC,EAAO,YAAYC,CAAmB;AAEzD,aAAAF,CAAiB,EAAE,kBAAkB,GAC5C,OAAOA,CAAiB,EAAE,YAAY,SAASN,CAAK,EAAE,GAC/C,OAAAE,CAAS,EAAE,gBAAgB;AAAA,IAAA,CACnC;AAAA,EAAA,CACF,GAED,KAAK,mDAAmD,MAAM;AACtD,UAAA,EAAC,WAAAA,MAAaC;AAAA,MAClB,gBAAAC;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAQ;AAAA,UACP,GAAGN;AAAA,UACL,UAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAGH,GACMO,IAAoBC,EAAO,YAAYC,CAAmB;AAEzD,WAAAF,CAAiB,EAAE,YAAY,YAAY,GAC3C,OAAAJ,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GACD,KAAK,oDAAoD,MAAM;AACvD,UAAA,EAAC,WAAAA,MAAaC;AAAA,MAClB,gBAAAC;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACJ,GAAGN;AAAA,UACL,UAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAGH,GACMO,IAAoBC,EAAO,YAAYC,CAAmB;AAEzD,WAAAF,CAAiB,EAAE,kBAAkB,GAC5C,OAAOA,CAAiB,EAAE,gBAAgB,QAAQ,qBAAqB,GACvE,OAAOA,CAAiB,EAAE,gBAAgB,UAAU,QAAQ,GAC5D,OAAOA,CAAiB,EAAE,gBAAgB,OAAO,qBAAqB,GAC/D,OAAAJ,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GACD,KAAK,kDAAkD,MAAM;AACrD,UAAA,EAAC,WAAAA,MAAaC;AAAA,wBACjBM,GACC,EAAA,UAAA;AAAA,QAAA,gBAAAL;AAAA,UAACC;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACF,GAAGN;AAAA,YACL,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,QAAa;AAAA,MAAA,EAEf,CAAA;AAAA,IACF,GACMO,IAAoBC,EAAO,YAAYC,CAAmB;AACzD,WAAAF,CAAiB,EAAE,kBAAkB,GAC5C,OAAOA,CAAiB,EAAE,gBAAgB,QAAQ,WAAW,GACtD,OAAAJ,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC;AACH,CAAC;"}