{"version":3,"file":"constants-DIsb-mTS.js","sources":["../lib/components/Checkbox/CheckboxComponent.tsx","../lib/components/Checkbox/components/CheckboxBlock.tsx","../lib/components/Checkbox/components/CheckboxInput.tsx","../lib/components/Checkbox/constants.ts"],"sourcesContent":["import type {FC} from 'react';\nimport type {CheckboxProps} from '@/components/Checkbox/constants';\nimport {Checkbox} from '@/components/Checkbox/constants';\n\nexport const CheckboxComponent: FC<CheckboxProps> = ({id, block, ...props}) => {\n  return (\n    <Checkbox.Block\n      htmlFor={id}\n      block={block}\n    >\n      <Checkbox.Input\n        {...props}\n        id={id}\n      />\n      <Checkbox.Indicator />\n    </Checkbox.Block>\n  );\n};\n","import type {FC, ReactNode} from 'react';\nimport {CHECKBOX_TEST_ID} from '@/components/Checkbox/constants';\nimport type {ElementProps} from '@/services/types';\nimport {cn} from '@/services/helpers';\n\ninterface Props extends ElementProps {\n  htmlFor?: string;\n  children: ReactNode;\n}\n\nexport const CheckboxBlock: FC<Props> = ({children, block, htmlFor = 'checkbox'}) => {\n  const classNames = cn(block, 'checkbox');\n  return (\n    <label\n      data-testid={CHECKBOX_TEST_ID}\n      className={classNames}\n      htmlFor={htmlFor}\n    >\n      {children}\n    </label>\n  );\n};\n","import type {FC, ChangeEvent} from 'react';\nimport {cn} from '@/services/helpers';\nimport type {CheckboxProps} from '@/components/Checkbox/constants';\nimport {CHECKBOX_TEST_INPUT_ID} from '@/components/Checkbox/constants';\n\nexport const CheckboxInput: FC<CheckboxProps> = ({\n  onChange,\n  id = 'checkbox',\n  checked = false,\n  disabled = false,\n  name = 'checkbox',\n  hasError = false,\n}) => {\n  const classNames = cn('', 'checkbox__input', {\n    'error': hasError,\n  });\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e.target.checked);\n    }\n  };\n  return (\n    <input\n      data-testid={CHECKBOX_TEST_INPUT_ID}\n      name={name}\n      disabled={disabled}\n      className={classNames}\n      checked={checked}\n      onChange={handleChange}\n      id={id}\n      type=\"checkbox\"\n    />\n  );\n};\n","import {CheckboxComponent} from '@/components/Checkbox/CheckboxComponent';\nimport {CheckboxIndicator} from '@/components/Checkbox/components/CheckboxIndicator';\nimport {CheckboxBlock} from '@/components/Checkbox/components/CheckboxBlock';\nimport {CheckboxInput} from '@/components/Checkbox/components/CheckboxInput';\nimport type {ElementProps} from '@/services/types';\n\nexport const Checkbox = Object.assign(CheckboxComponent, {\n  Block: CheckboxBlock,\n  Indicator: CheckboxIndicator,\n  Input: CheckboxInput,\n});\n\nexport interface CheckboxProps extends ElementProps {\n  name?: string;\n  id?: string;\n  disabled?: boolean;\n  onChange?: (checked: boolean) => void;\n  checked?: boolean;\n  hasError?: boolean;\n}\n\nexport const CHECKBOX_TEST_ID = 'checkboxTestId';\nexport const CHECKBOX_TEST_INPUT_ID = 'checkboxTestInputId';\n"],"names":["CheckboxComponent","id","block","props","jsxs","Checkbox","Block","htmlFor","children","jsx","Input","Indicator","CheckboxBlock","classNames","cn","CHECKBOX_TEST_ID","className","e","CheckboxInput","onChange","checked","r","disabled","s","name","a","hasError","error","CHECKBOX_TEST_INPUT_ID","target","type","Object","assign","CheckboxIndicator"],"mappings":";;;AAIO,MAAMA,IAAuC,CAAA,EAAEC,IAAIC,GAAAA,OAAAA,GAAAA,GAAUC,EAEhEC,MAAAA,EAACC,EAASC,OAAT,EACCC,SAASN,GACTC,OAEAM,GAAAA,UAAA,CAAAC,EAACJ,EAASK,OAAT,EACKP,GAAAA,GACJF,IAEFQ,EAAAA,CAAAA,GAAAA,EAACJ,EAASM,WAAT,CAAmB,CCJbC,CAAAA,EAAAA,CAAAA,GAAAA,IAA2B,CAAEJ,EAAAA,UAAAA,GAAUN,OAAOK,GAAAA,SAAAA,IAAU,WAC7D,MAAA;AAAA,QAAAM,IAAaC,EAAGZ,GAAO,UAAA;AAE3B,SAAAO,EAAC,SAAA,EACC,eAAaM,GACbC,WAAWH,GACXN,SAAAA,GAECC,UACHS,EAAA,CAAA;AAAA,GCdSC,IAAmC,CAAA,EAC9CC,UACAlB,GAAAA,IAAAA,IAAK,YACLmB,SAAUC,IAAA,IACVC,UAAWC,IAAA,IACXC,MAAOC,IAAA,YACPC,UAAW,IAAA,GAAA,MAAA;AAEL,QAAAb,IAAaC,EAAG,IAAI,mBAAmB,EAC3Ca,OAASD,EAQT,CAAA;AAAA,SAAAjB,EAAC,SAAA,EACC,eAAamB,GACbJ,MAAAA,GACAF,UACAN,GAAAA,WAAWH,GACXO,SAAAA,GACAD,UAZkBF,CAAAA,MAAAA;AAChBE,IAAAA,KACOA,EAAAF,EAAEY,OAAOT,OAAAA;AAAAA,EAAO,GAWzBnB,IAAAA,GACA6B,MAAK,WAAA,CAAA;AACP,GCzBSzB,IAAW0B,OAAOC,OAAOhC,GAAmB,EACvDM,OAAOM,GACPD,WAAWsB,GACXvB,OAAOQ,EAAAA,CAAAA,GAYIH,IAAmB,kBACnBa,IAAyB;"}