@use "sass:math";
@use "../settings" as s;
.favorite-button {
  width: s.rem(32);
  height: s.rem(32);
  z-index: 10;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background 0.3s linear;
  svg {
    transition: color 0.3s linear;
  }
  &:disabled svg {
    cursor: auto;
    opacity: 80%;
  }
  &--transparent {
    svg {
      color: s.get-color(s.$favButtonColors, "transparent");
      font-size: s.rem(20);
    }
    &:not(&:disabled) {
      @media (any-hover: hover) {
        &:hover {
          svg {
            color: s.get-color(s.$favButtonColors, "hover-transparent");
          }
        }
      }
      &.active {
        @media (any-hover: hover) {
          &:hover {
            svg {
              color: s.get-color(s.$favButtonColors, "hover-active-transparent");
            }
          }
        }
        &:active {
          svg {
            color: s.get-color(s.$favButtonColors, "transparent-press");
          }
        }
      }
    }
    &.active {
      svg {
        color: s.get-color(s.$favButtonColors, "active-transparent");
      }
    }
    &:active {
      svg {
        color: s.get-color(s.$favButtonColors, "transparent-press");
      }
    }
  }
  &--circle {
    background: s.get-color(s.$favButtonColors, "circle");
    border-radius: 50%;
    svg {
      color: s.get-color(s.$favButtonColors, "circle-color");
      font-size: s.rem(16);
    }
    &:not(&:disabled) {
      @media (any-hover: hover) {
        &:hover {
          background: s.get-color(s.$favButtonColors, "hover-circle");
        }
      }
      &:active {
        background: s.get-color(s.$favButtonColors, "press-circle");
      }
    }
  }
}
