{"version":3,"file":"RouterLink.test.js","sources":["../../../lib/components/RouterLink/RouterLink.test.tsx"],"sourcesContent":["import {cleanup, render, screen} from '@testing-library/react';\r\nimport {ROUTER_LINK_COLOR, ROUTER_LINK_TEST_ID} from '@/components/RouterLink/constants';\r\nimport {RouterLink} from '@/components/RouterLink/RouterLink';\r\nimport {MemoryRouter} from 'react-router';\r\n\r\ndescribe('Router Link component', () => {\r\n  afterEach(cleanup);\r\n\r\n  const colors = Object.values(ROUTER_LINK_COLOR);\r\n  const props = {\r\n    color: ROUTER_LINK_COLOR.GRAY,\r\n  };\r\n  colors.forEach((color) => {\r\n    const testName = `renders links with ${color} color`;\r\n    test(testName, () => {\r\n      const {container} = render(\r\n        <RouterLink\r\n          href=\"/\"\r\n          color={color}\r\n        >\r\n          Link\r\n        </RouterLink>,\r\n      );\r\n      const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\r\n\r\n      expect(routerLinkElement).toBeInTheDocument();\r\n      expect(routerLinkElement).toHaveClass(`link--${color}`);\r\n      expect(container).toMatchSnapshot();\r\n    });\r\n  });\r\n\r\n  test('applies \"link-icon\" class when withIcon is true', () => {\r\n    const {container} = render(\r\n      <RouterLink\r\n        href=\"/\"\r\n        withIcon\r\n        {...props}\r\n      >\r\n        Link with Icon\r\n      </RouterLink>,\r\n    );\r\n    const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\r\n\r\n    expect(routerLinkElement).toHaveClass('link--icon');\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n  test('renders an external link when \"href\" is provided', () => {\r\n    const {container} = render(\r\n      <RouterLink\r\n        href=\"https://example.com\"\r\n        {...props}\r\n      >\r\n        External Link\r\n      </RouterLink>,\r\n    );\r\n    const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\r\n\r\n    expect(routerLinkElement).toBeInTheDocument();\r\n    expect(routerLinkElement).toHaveAttribute('href', 'https://example.com');\r\n    expect(routerLinkElement).toHaveAttribute('target', '_blank');\r\n    expect(routerLinkElement).toHaveAttribute('rel', 'noopener noreferrer');\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n  test('renders an internal link when \"to\" is provided', () => {\r\n    const {container} = render(\r\n      <MemoryRouter>\r\n        <RouterLink\r\n          to=\"/internal\"\r\n          {...props}\r\n        >\r\n          Internal Link\r\n        </RouterLink>\r\n        ,\r\n      </MemoryRouter>,\r\n    );\r\n    const routerLinkElement = screen.getByTestId(ROUTER_LINK_TEST_ID);\r\n    expect(routerLinkElement).toBeInTheDocument();\r\n    expect(routerLinkElement).toHaveAttribute('href', '/internal');\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n});\r\n"],"names":["describe","afterEach","cleanup","colors","Object","values","ROUTER_LINK_COLOR","props","color","GRAY","forEach","test","container","render","jsx","RouterLink","href","children","routerLinkElement","screen","getByTestId","ROUTER_LINK_TEST_ID","expect","toBeInTheDocument","toHaveClass","toMatchSnapshot","withIcon","toHaveAttribute","MemoryRouter","to"],"mappings":";;;;;AAKAA,SAAS,yBAAyB,MAAA;AAChCC,YAAUC,CAEJ;AAAA,QAAAC,IAASC,OAAOC,OAAOC,CACvBC,GAAAA,IAAQ,EACZC,OAAOF,EAAkBG;AAEpBN,EAAAA,EAAAO,QAASF,OAEdG;AAAAA,SADiB,sBAAsBH,CACxB,UAAA,MAAA;AACP,cAAAI,WAACA,EAAAA,IAAaC,EAClBC,EAACC,GAAA,EACCC,MAAK,KACLR,OACDS,GAAAA,UAAA,YAIGC,IAAoBC,EAAOC,YAAYC,CAEtCC;AAAAA,aAAAJ,CAAmBK,EAAAA,kBAAAA,GAC1BD,OAAOJ,CAAmBM,EAAAA,YAAY,SAAShB,CACxCc,EAAAA,GAAAA,OAAAV,GAAWa,gBAAgB;AAAA,IAAA,CAAA;AAAA,EACnC,CAGHd,GAAAA,KAAK,mDAAmD,MAChD;AAAA,UAAA,EAAAC,WAACA,EAAaC,IAAAA,EAClBC,EAACC,GAAA,EACCC,MAAK,KACLU,cACInB,GAAAA,GACLU,UAAA,iBAIGC,CAAAA,CAAAA,GAAAA,IAAoBC,EAAOC,YAAYC,CAAAA;AAEtCC,WAAAJ,CAAAA,EAAmBM,YAAY,YAC/BF,GAAAA,OAAAV,CAAWa,EAAAA,gBAAAA;AAAAA,EAAgB,IAEpCd,KAAK,oDAAoD,MACjD;AAAA,UAAA,EAAAC,WAACA,EAAaC,IAAAA,EAClBC,EAACC,GAAA,EACCC,MAAK,uBACDT,GAAAA,GACLU,UAAA,gBAAA,CAAA,CAAA,GAIGC,IAAoBC,EAAOC,YAAYC;AAEtCC,WAAAJ,CAAAA,EAAmBK,qBAC1BD,OAAOJ,CAAAA,EAAmBS,gBAAgB,QAAQ,wBAClDL,OAAOJ,CAAAA,EAAmBS,gBAAgB,UAAU,QAAA,GACpDL,OAAOJ,CAAmBS,EAAAA,gBAAgB,OAAO,qBAAA,GAC1CL,OAAAV,CAAWa,EAAAA,gBAAAA;AAAAA,EAAgB,IAEpCd,KAAK,kDAAkD;AAC/C,UAAAC,EAAAA,WAACA,EAAaC,IAAAA,IACjBe,GACC,EAAAX,UAAA,CAAAH,EAACC,GAAA,EACCc,IAAG,aACCtB,GAAAA,GACLU,UAAA,gBAEY,CAAA,GAAA,GAAA,EAAA,CAAA,CAAA,GAIXC,IAAoBC,EAAOC,YAAYC;AACtCC,WAAAJ,CAAAA,EAAmBK,kBAC1BD,GAAAA,OAAOJ,GAAmBS,gBAAgB,QAAQ,cAC3CL,OAAAV,CAAAA,EAAWa;EAAgB,CACnC;AAAA,CAAA;"}