{"version":3,"file":"PaginationComponent-B0A_gulP.cjs","sources":["../lib/components/Pagination/components/PaginationArrow.tsx","../lib/components/Pagination/components/PaginationBody.tsx","../lib/components/Pagination/constants.ts","../lib/components/Pagination/PaginationComponent.tsx"],"sourcesContent":["import type {FC} from 'react';\nimport {Icons} from '@/services/icons';\nimport type {PaginationArrowDirection} from '@/components/Pagination/constants';\nimport {\n  PAGINATION_ARROW_DIRECTION,\n  PAGINATION_ARROW_LEFT_TEST_ID,\n  PAGINATION_ARROW_RIGHT_TEST_ID,\n} from '@/components/Pagination/constants';\n\ninterface Props {\n  direction: PaginationArrowDirection;\n  disabled?: boolean;\n  onClick: () => void;\n}\n\nexport const PaginationArrow: FC<Props> = ({onClick, direction, disabled = false}) => {\n  const handleDirection = () => {\n    if (direction === PAGINATION_ARROW_DIRECTION.LEFT) {\n      return (\n        <Icons.ArrowNarrowLeft\n          data-testid={PAGINATION_ARROW_LEFT_TEST_ID}\n          className=\"pagination__arrow\"\n        />\n      );\n    }\n    return (\n      <Icons.ArrowNarrowRight\n        data-testid={PAGINATION_ARROW_RIGHT_TEST_ID}\n        className=\"pagination__arrow\"\n      />\n    );\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      disabled={disabled}\n      className=\"pagination__button\"\n    >\n      {handleDirection()}\n    </button>\n  );\n};\n","import type {FC} from 'react';\nimport type {PaginationProps} from '@/components/Pagination/constants';\nimport {Pagination} from '@/components/Pagination/constants';\n\nexport const PaginationBody: FC<PaginationProps> = ({\n  pages,\n  currentPage,\n  onPageClick,\n  onPrevClick,\n  onNextClick,\n  isLoading = false,\n}) => {\n  const isFirstPage = currentPage === 1 || isLoading;\n  const isLastPage = currentPage === pages.at(-1) || isLoading;\n\n  const renderPages = () =>\n    pages.map((page) => {\n      const isSelected = page === currentPage;\n      const handlePage = () => {\n        onPageClick(page);\n      };\n      return (\n        <Pagination.Page\n          isSelected={isSelected}\n          onClick={handlePage}\n          disabled={isLoading}\n          key={page}\n          page={page}\n        />\n      );\n    });\n\n  return (\n    <div className=\"pagination__body\">\n      <Pagination.Arrow\n        disabled={isFirstPage}\n        onClick={onPrevClick}\n        direction=\"left\"\n      />\n      {renderPages()}\n      <Pagination.Arrow\n        disabled={isLastPage}\n        onClick={onNextClick}\n        direction=\"right\"\n      />\n    </div>\n  );\n};\n","import {PaginationComponent} from '@/components/Pagination/PaginationComponent';\nimport {PaginationPage} from '@/components/Pagination/components/PaginationPage';\nimport {PaginationArrow} from '@/components/Pagination/components/PaginationArrow';\nimport {PaginationBody} from '@/components/Pagination/components/PaginationBody';\n\nexport const PAGINATION_ARROW_DIRECTION = Object.freeze({\n  LEFT: 'left',\n  RIGHT: 'right',\n});\n\nexport const Pagination = Object.assign(PaginationComponent, {\n  Page: PaginationPage,\n  Arrow: PaginationArrow,\n  Body: PaginationBody,\n});\n\nexport interface PaginationProps {\n  pages: number[];\n  currentPage: number;\n  onPageClick: (page: number) => void;\n  onNextClick: () => void;\n  onPrevClick: () => void;\n  isLoading?: boolean;\n}\n\nexport type PaginationArrowDirection = (typeof PAGINATION_ARROW_DIRECTION)[keyof typeof PAGINATION_ARROW_DIRECTION];\n\nexport const PAGINATION_TEST_ID = 'paginationTestId';\nexport const PAGINATION_ARROW_LEFT_TEST_ID = 'paginationArrowLeftTestId';\nexport const PAGINATION_ARROW_RIGHT_TEST_ID = 'paginationArrowRightTestId';\n","import type {FC} from 'react';\nimport type {PaginationProps} from '@/components/Pagination/constants';\nimport {Pagination, PAGINATION_TEST_ID} from '@/components/Pagination/constants';\nimport type {ElementProps} from '@/services/types';\nimport {cn} from '@/services/helpers';\n\ninterface Props extends PaginationProps, ElementProps {}\n\nexport const PaginationComponent: FC<Props> = ({block, ...props}) => (\n  <div\n    data-testid={PAGINATION_TEST_ID}\n    className={cn(block, 'pagination')}\n  >\n    <Pagination.Body {...props} />\n  </div>\n);\n"],"names":["PaginationArrow","onClick","direction","disabled","handleDirection","PAGINATION_ARROW_DIRECTION","jsx","Icons","PAGINATION_ARROW_LEFT_TEST_ID","PAGINATION_ARROW_RIGHT_TEST_ID","PaginationBody","pages","currentPage","onPageClick","onPrevClick","onNextClick","isLoading","isFirstPage","isLastPage","renderPages","page","isSelected","handlePage","Pagination","jsxs","PaginationComponent","PaginationPage","PAGINATION_TEST_ID","block","props","cn"],"mappings":"wLAeaA,EAA6B,CAAC,CAAC,QAAAC,EAAS,UAAAC,EAAW,SAAAC,EAAW,MAAW,CACpF,MAAMC,EAAkB,IAClBF,IAAcG,EAA2B,KAEzCC,EAAA,IAACC,EAAAA,MAAM,gBAAN,CACC,cAAaC,EACb,UAAU,mBAAA,CACZ,EAIFF,EAAA,IAACC,EAAAA,MAAM,iBAAN,CACC,cAAaE,EACb,UAAU,mBAAA,CACZ,EAKF,OAAAH,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAAL,EACA,SAAAE,EACA,UAAU,qBAET,SAAgBC,EAAA,CAAA,CACnB,CAEJ,ECvCaM,EAAsC,CAAC,CAClD,MAAAC,EACA,YAAAC,EACA,YAAAC,EACA,YAAAC,EACA,YAAAC,EACA,UAAAC,EAAY,EACd,IAAM,CACE,MAAAC,EAAcL,IAAgB,GAAKI,EACnCE,EAAaN,IAAgBD,EAAM,GAAG,EAAE,GAAKK,EAE7CG,EAAc,IAClBR,EAAM,IAAKS,GAAS,CAClB,MAAMC,EAAaD,IAASR,EACtBU,EAAa,IAAM,CACvBT,EAAYO,CAAI,CAClB,EAEE,OAAAd,EAAA,IAACiB,EAAW,KAAX,CACC,WAAAF,EACA,QAASC,EACT,SAAUN,EAEV,KAAAI,CAAA,EADKA,CAEP,CAAA,CAEH,EAGD,OAAAI,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAlB,EAAA,IAACiB,EAAW,MAAX,CACC,SAAUN,EACV,QAASH,EACT,UAAU,MAAA,CACZ,EACCK,EAAY,EACbb,EAAA,IAACiB,EAAW,MAAX,CACC,SAAUL,EACV,QAASH,EACT,UAAU,OAAA,CAAA,CACZ,EACF,CAEJ,EC1CaV,EAA6B,OAAO,OAAO,CACtD,KAAM,OACN,MAAO,OACT,CAAC,EAEYkB,EAAa,OAAO,OAAOE,EAAqB,CAC3D,KAAMC,EAAA,eACN,MAAO1B,EACP,KAAMU,CACR,CAAC,EAaYiB,EAAqB,mBACrBnB,EAAgC,4BAChCC,EAAiC,6BCrBjCgB,EAAiC,CAAC,CAAC,MAAAG,EAAO,GAAGC,CACxD,IAAAvB,EAAA,IAAC,MAAA,CACC,cAAaqB,EACb,UAAWG,EAAAA,GAAGF,EAAO,YAAY,EAEjC,SAACtB,EAAAA,IAAAiB,EAAW,KAAX,CAAiB,GAAGM,CAAO,CAAA,CAAA,CAC9B"}