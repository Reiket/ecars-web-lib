{"version":3,"file":"constants-Vl-meTpW.js","sources":["../lib/components/Field/FieldComponent.tsx","../lib/components/Field/components/FieldLabel.tsx","../lib/components/Field/constants.ts"],"sourcesContent":["import type {ReactElement, FC} from 'react';\nimport {cloneElement} from 'react';\nimport {Field, FIELD_TEST_ID} from '@/components/Field/constants';\nimport type {ElementProps} from '@/services/types';\nimport {cn} from '@/services/helpers';\n\ninterface Props extends ElementProps {\n  children: ReactElement;\n  id?: string;\n  label?: string;\n  error?: string;\n}\n\nexport const FieldComponent: FC<Props> = ({label, block, children, error, id = 'input'}) => {\n  const classNames = cn(block, 'field');\n  return (\n    <div\n      data-testid={FIELD_TEST_ID}\n      className={classNames}\n    >\n      {!!label && (\n        <Field.Label\n          text={label}\n          htmlFor={id}\n        />\n      )}\n      {cloneElement(children, {id, hasError: !!error})}\n      {!!error && <Field.Error errorText={error} />}\n    </div>\n  );\n};\n","import type {FC} from 'react';\nimport {FIELD_LABEL_TEST_ID} from '@/components/Field/constants';\n\ninterface Props {\n  htmlFor?: string;\n  text: string;\n}\n\nexport const FieldLabel: FC<Props> = ({text, htmlFor = 'input'}) => {\n  return (\n    <label\n      data-testid={FIELD_LABEL_TEST_ID}\n      className=\"field__label\"\n      htmlFor={htmlFor}\n    >\n      {text}\n    </label>\n  );\n};\n","import {FieldComponent} from '@/components/Field/FieldComponent';\nimport {FieldError} from '@/components/Field/components/FieldError';\nimport {FieldLabel} from '@/components/Field/components/FieldLabel';\n\nexport const Field = Object.assign(FieldComponent, {\n  Label: FieldLabel,\n  Error: FieldError,\n});\n\nexport const FIELD_TEST_ID = 'fieldTestId';\nexport const FIELD_LABEL_TEST_ID = 'fieldLabelTestId';\n"],"names":["FieldComponent","label","block","children","error","id","c","classNames","cn","jsxs","FIELD_TEST_ID","className","jsx","Field","Label","text","htmlFor","cloneElement","hasError","Error","errorText","FieldLabel","FIELD_LABEL_TEST_ID","Object","assign","FieldError"],"mappings":";;;;AAaa,MAAAA,IAA4B,CAAA,EAAEC,UAAOC,OAAOC,GAAAA,UAAAA,GAAUC,UAAOC,IAAKC,IAAA,QAAA,MAAA;AACvE,QAAAC,IAAaC,EAAGN,GAAO,OAAA;AAE3B,SAAAO,EAAC,OAAA,EACC,eAAaC,GACbC,WAAWJ,GAEVJ,UAAA,GAAEF,KACDW,EAACC,EAAMC,OAAN,EACCC,MAAMd,GACNe,SAASX,MAGZY,EAAad,GAAU,EAACE,IAAAA,GAAIa,YAAYd,EACtCA,CAAAA,GAAAA,CAAAA,CAAAA,KAASQ,EAACC,EAAMM,OAAN,EAAYC,WAAWhB,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AACtC,GCpBSiB,IAAwB,GAAEN,MAAMC,GAAAA,SAAAA,IAAU,cAEnDJ,EAAC,SAAA,EACC,eAAaU,GACbX,WAAU,gBACVK,YAECb,UAAAY,EAAAA,CAAAA,GCXMF,IAAQU,OAAOC,OAAOxB,GAAgB,EACjDc,OAAOO,GACPF,OAAOM,EAAAA,CAAAA,GAGIf,IAAgB,eAChBY,IAAsB;"}