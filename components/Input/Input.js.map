{"version":3,"file":"Input.js","sources":["../../../lib/components/Input/Input.tsx"],"sourcesContent":["import {cn} from '@/services/helpers';\nimport type {ChangeEvent, FC, HTMLInputTypeAttribute} from 'react';\nimport {INPUT_TEST_ID} from '@/components/Input/constants';\nimport type {ElementProps} from '@/services/types';\n\ninterface Props extends ElementProps {\n  type?: HTMLInputTypeAttribute;\n  value?: string;\n  onChange?: (value: string) => void;\n  name?: string;\n  placeholder?: string;\n  id?: string;\n  disabled?: boolean;\n  hasError?: boolean;\n}\n\nexport const Input: FC<Props> = ({\n  value,\n  onChange,\n  hasError,\n  placeholder,\n  block,\n  disabled = false,\n  type = 'text',\n  id = 'input',\n  name = 'input',\n}) => {\n  const classNames = cn(block, 'input', {\n    'error': hasError,\n  });\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(event.currentTarget.value);\n    }\n  };\n  return (\n    <input\n      onChange={handleChange}\n      disabled={disabled}\n      autoComplete=\"off\"\n      data-testid={INPUT_TEST_ID}\n      className={classNames}\n      id={id}\n      name={name}\n      placeholder={placeholder}\n      value={value}\n      type={type}\n    />\n  );\n};\n"],"names":["Input","value","onChange","hasError","placeholder","block","disabled","p","type","l","id","m","name","classNames","cn","error","jsx","event","currentTarget","autoComplete","INPUT_TEST_ID","className"],"mappings":";;;AAgBO,MAAMA,IAAmB,CAAA,EAC9BC,OACAC,GAAAA,UAAAA,GACAC,UACAC,GAAAA,aAAAA,GACAC,UACAC,UAAWC,IAAA,IACXC,MAAOC,IAAA,QACPC,IAAKC,IAAA,SACLC,UAAO,QAED,MAAA;AAAA,QAAAC,IAAaC,EAAGT,GAAO,SAAS,EACpCU,OAASZ,EAAAA,CAAAA;AAQT,SAAAa,EAAC,SAAA,EACCd,UAPkBe,CAAAA,MAChBf;AAAAA,IAAAA,KACOA,EAAAe,EAAMC,cAAcjB,KAAAA;AAAAA,EAAK,GAMlCK,UACAa,GAAAA,cAAa,OACb,eAAaC,GACbC,WAAWR,GACXH,IAAAA,GACAE,MACAR,GAAAA,aAAAA,GACAH,OACAO,GAAAA,MAAAA,EAAAA,CAAAA;AACF;"}