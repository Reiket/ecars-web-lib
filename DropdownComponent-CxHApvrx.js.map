{"version":3,"file":"DropdownComponent-CxHApvrx.js","sources":["../lib/components/Dropdown/components/DropdownList.tsx","../lib/components/Dropdown/constants.ts","../lib/components/Dropdown/DropdownComponent.tsx"],"sourcesContent":["import type {FC} from 'react';\nimport type {DropdownProps} from '@/components/Dropdown/constants';\nimport {Dropdown} from '@/components/Dropdown/constants';\n\nexport const DropdownList: FC<DropdownProps> = ({category, options, onSelect}) => (\n  <ul className=\"dropdown-menu__list\">\n    {options.map((option) => {\n      const {value, label} = option;\n      const isSelected = value === category;\n      return (\n        <Dropdown.Option\n          key={value}\n          value={value}\n          label={label}\n          onSelect={onSelect}\n          isSelected={isSelected}\n        />\n      );\n    })}\n  </ul>\n);\n","import {DropdownComponent} from '@/components/Dropdown/DropdownComponent';\nimport {DropdownList} from '@/components/Dropdown/components/DropdownList';\nimport type {ReactNode} from 'react';\nimport {DropdownOption} from '@/components/Dropdown/components/DropdownOption';\nimport {DropdownCategory} from '@/components/Dropdown/components/DropdownCategory';\nimport {DropdownBlock} from '@/components/Dropdown/components/DropdownBlock';\n\nexport const Dropdown = Object.assign(DropdownComponent, {\n  List: DropdownList,\n  Option: DropdownOption,\n  Category: DropdownCategory,\n  Block: DropdownBlock,\n});\n\nexport interface DropdownOption {\n  value: string;\n  label?: ReactNode;\n}\n\nexport interface DropdownProps {\n  onSelect: (value: string) => void;\n  category: string;\n  options: DropdownOption[];\n}\n\nexport const DROPDOWN_TEST_ID = 'dropdownTestId';\n","import type {FC} from 'react';\nimport type {ElementProps} from '@/services/types';\nimport {cn} from '@/services/helpers';\nimport type {DropdownProps} from './constants';\nimport {Dropdown, DROPDOWN_TEST_ID} from './constants';\nimport {useClickOutside} from '@/services/hooks/useClickOutside';\n\ninterface Props extends ElementProps, DropdownProps {\n  handleOpen: () => void;\n  onClickOutside: (isOpen: boolean) => void;\n  isOpen: boolean;\n}\nexport const DropdownComponent: FC<Props> = ({\n  category,\n  block,\n  options,\n  onSelect,\n  handleOpen,\n  isOpen,\n  onClickOutside,\n}) => {\n  const selectedOption = options.find((option) => option.value === category);\n  const dropdownRef = useClickOutside(onClickOutside);\n  return (\n    <div\n      data-testid={DROPDOWN_TEST_ID}\n      ref={dropdownRef}\n      className={cn(block, 'dropdown-menu', {\n        '_dropdown-active': isOpen,\n      })}\n    >\n      <Dropdown.Block>\n        <Dropdown.Category\n          handleOpen={handleOpen}\n          item={selectedOption}\n        />\n      </Dropdown.Block>\n      <Dropdown.List\n        onSelect={onSelect}\n        options={options}\n        category={category}\n      />\n    </div>\n  );\n};\n"],"names":["DropdownList","category","options","onSelect","jsx","option","value","label","isSelected","Dropdown","DropdownComponent","DropdownOption","DropdownCategory","DropdownBlock","DROPDOWN_TEST_ID","block","handleOpen","isOpen","onClickOutside","selectedOption","dropdownRef","useClickOutside","jsxs","cn"],"mappings":";;;;;;AAIO,MAAMA,IAAkC,CAAC,EAAC,UAAAC,GAAU,SAAAC,GAAS,UAAAC,EAAQ,MACzE,gBAAAC,EAAA,MAAA,EAAG,WAAU,uBACX,UAAQF,EAAA,IAAI,CAACG,MAAW;AACjB,QAAA,EAAC,OAAAC,GAAO,OAAAC,EAAA,IAASF,GACjBG,IAAaF,MAAUL;AAE3B,SAAA,gBAAAG;AAAA,IAACK,EAAS;AAAA,IAAT;AAAA,MAEC,OAAAH;AAAA,MACA,OAAAC;AAAA,MACA,UAAAJ;AAAA,MACA,YAAAK;AAAA,IAAA;AAAA,IAJKF;AAAA,EAKP;AAEJ,CAAC,EACH,CAAA,GCZWG,IAAW,OAAO,OAAOC,GAAmB;AAAA,EACvD,MAAMV;AAAA,EACN,QAAQW;AAAA,EACR,UAAUC;AAAA,EACV,OAAOC;AACT,CAAC,GAaYC,IAAmB,kBCbnBJ,IAA+B,CAAC;AAAA,EAC3C,UAAAT;AAAA,EACA,OAAAc;AAAA,EACA,SAAAb;AAAA,EACA,UAAAC;AAAA,EACA,YAAAa;AAAA,EACA,QAAAC;AAAA,EACA,gBAAAC;AACF,MAAM;AACJ,QAAMC,IAAiBjB,EAAQ,KAAK,CAACG,MAAWA,EAAO,UAAUJ,CAAQ,GACnEmB,IAAcC,EAAgBH,CAAc;AAEhD,SAAA,gBAAAI;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAaR;AAAA,MACb,KAAKM;AAAA,MACL,WAAWG,EAAGR,GAAO,iBAAiB;AAAA,QACpC,oBAAoBE;AAAA,MAAA,CACrB;AAAA,MAED,UAAA;AAAA,QAAC,gBAAAb,EAAAK,EAAS,OAAT,EACC,UAAA,gBAAAL;AAAA,UAACK,EAAS;AAAA,UAAT;AAAA,YACC,YAAAO;AAAA,YACA,MAAMG;AAAA,UAAA;AAAA,QAAA,GAEV;AAAA,QACA,gBAAAf;AAAA,UAACK,EAAS;AAAA,UAAT;AAAA,YACC,UAAAN;AAAA,YACA,SAAAD;AAAA,YACA,UAAAD;AAAA,UAAA;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,EACF;AAEJ;"}