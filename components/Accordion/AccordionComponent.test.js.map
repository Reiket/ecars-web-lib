{"version":3,"file":"AccordionComponent.test.js","sources":["../../../lib/components/Accordion/AccordionComponent.test.tsx"],"sourcesContent":["import {fireEvent, render, screen} from '@testing-library/react';\nimport {Accordion, ACCORDION_TEST_ID} from '@/components/Accordion/constants';\n\nconst defaultProps = {\n  isOpen: false,\n  textContent: 'Test content',\n  title: 'Test title',\n  onClick: jest.fn(),\n};\ndescribe('Accordion Component', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n  const isOpenValues = [true, false];\n  const renderAccordion = (props = {}) => {\n    const mergedProps = {...defaultProps, ...props};\n    return render(<Accordion {...mergedProps} />);\n  };\n\n  test('renders the accordion component and title, text correctly', () => {\n    const {container} = renderAccordion();\n    expect(screen.getByText(defaultProps.title)).toBeInTheDocument();\n    expect(screen.getByText(defaultProps.textContent)).toBeInTheDocument();\n    expect(screen.getByTestId(ACCORDION_TEST_ID)).toBeInTheDocument();\n    expect(container).toMatchSnapshot();\n  });\n\n  isOpenValues.forEach((isOpen) => {\n    const isOpenString = `should ${isOpen ? 'open' : 'close'} the content`;\n    test(isOpenString, () => {\n      const {container} = renderAccordion({isOpen});\n      const content = screen.getByText(defaultProps.textContent);\n      const accordionElement = screen.getByTestId(ACCORDION_TEST_ID);\n      if (isOpen) {\n        expect(content).toBeVisible();\n        expect(accordionElement).toHaveClass('_active');\n      } else {\n        expect(content.offsetHeight).toBe(0);\n        expect(accordionElement).not.toHaveClass('_active');\n        expect(container).toMatchSnapshot();\n      }\n    });\n  });\n  test('triggers onClick handler when title is clicked', () => {\n    renderAccordion();\n    fireEvent.click(screen.getByText(defaultProps.title));\n    expect(defaultProps.onClick).toHaveBeenCalledTimes(1);\n  });\n});\n"],"names":["defaultProps","isOpenValues","renderAccordion","props","mergedProps","render","jsx","Accordion","container","screen","ACCORDION_TEST_ID","isOpen","isOpenString","content","accordionElement","fireEvent"],"mappings":";;;AAGA,MAAMA,IAAe;AAAA,EACnB,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,OAAO;AAAA,EACP,SAAS,KAAK,GAAG;AACnB;AACA,SAAS,uBAAuB,MAAM;AACpC,aAAW,MAAM;AACf,SAAK,cAAc;AAAA,EAAA,CACpB;AACK,QAAAC,IAAe,CAAC,IAAM,EAAK,GAC3BC,IAAkB,CAACC,IAAQ,OAAO;AACtC,UAAMC,IAAc,EAAC,GAAGJ,GAAc,GAAGG,EAAK;AAC9C,WAAOE,EAAO,gBAAAC,EAACC,GAAW,EAAA,GAAGH,EAAa,CAAA,CAAE;AAAA,EAC9C;AAEA,OAAK,6DAA6D,MAAM;AAChE,UAAA,EAAC,WAAAI,EAAS,IAAIN,EAAgB;AACpC,WAAOO,EAAO,UAAUT,EAAa,KAAK,CAAC,EAAE,kBAAkB,GAC/D,OAAOS,EAAO,UAAUT,EAAa,WAAW,CAAC,EAAE,kBAAkB,GACrE,OAAOS,EAAO,YAAYC,CAAiB,CAAC,EAAE,kBAAkB,GACzD,OAAAF,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GAEYP,EAAA,QAAQ,CAACU,MAAW;AAC/B,UAAMC,IAAe,UAAUD,IAAS,SAAS,OAAO;AACxD,SAAKC,GAAc,MAAM;AACvB,YAAM,EAAC,WAAAJ,EAAS,IAAIN,EAAgB,EAAC,QAAAS,GAAO,GACtCE,IAAUJ,EAAO,UAAUT,EAAa,WAAW,GACnDc,IAAmBL,EAAO,YAAYC,CAAiB;AAC7D,MAAIC,KACK,OAAAE,CAAO,EAAE,YAAY,GACrB,OAAAC,CAAgB,EAAE,YAAY,SAAS,MAE9C,OAAOD,EAAQ,YAAY,EAAE,KAAK,CAAC,GACnC,OAAOC,CAAgB,EAAE,IAAI,YAAY,SAAS,GAC3C,OAAAN,CAAS,EAAE,gBAAgB;AAAA,IACpC,CACD;AAAA,EAAA,CACF,GACD,KAAK,kDAAkD,MAAM;AAC3C,IAAAN,EAAA,GAChBa,EAAU,MAAMN,EAAO,UAAUT,EAAa,KAAK,CAAC,GACpD,OAAOA,EAAa,OAAO,EAAE,sBAAsB,CAAC;AAAA,EAAA,CACrD;AACH,CAAC;"}