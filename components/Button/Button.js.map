{"version":3,"file":"Button.js","sources":["../../../lib/components/Button/Button.tsx"],"sourcesContent":["import type {FC, MouseEvent, ReactNode} from 'react';\nimport type {ButtonAttributesType, ButtonColorType, ButtonSizeType} from '@/components/Button/constants';\nimport {BUTTON_TEST_ID} from '@/components/Button/constants';\nimport {cn} from '@/services/helpers';\nimport type {ElementProps} from '@/services/types';\n\nexport interface ButtonProps extends ElementProps {\n  size: ButtonSizeType;\n  children: ReactNode;\n  color: ButtonColorType;\n  type?: ButtonAttributesType;\n  disabled?: boolean;\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\n  isTransparent?: boolean;\n  withIcon?: boolean;\n}\n\nexport const Button: FC<ButtonProps> = ({\n  children,\n  size,\n  color,\n  onClick,\n  type = 'button',\n  disabled = false,\n  isTransparent = false,\n  withIcon = false,\n  block,\n}) => {\n  const classNames = cn(block, 'button', `button--${size} button--${color}`, {\n    'button--transparent': isTransparent,\n    'button--icon': withIcon,\n  });\n  return (\n    <button\n      data-testid={BUTTON_TEST_ID}\n      disabled={disabled}\n      type={type}\n      className={classNames}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":["Button","children","size","color","onClick","type","disabled","isTransparent","withIcon","block","classNames","cn","jsx","BUTTON_TEST_ID","className"],"mappings":";;;AAiBO,MAAMA,IAA0B,GACrCC,UACAC,GAAAA,MAAAA,GACAC,UACAC,SACAC,GAAAA,MAAAA,IAAO,UACPC,UAAW,IAAA,IACXC,uBACAC,UAAAA,IAAAA,IACAC,OAAAA,EAAAA,MAAAA;AAEM,QAAAC,IAAaC,EAAGF,GAAO,UAAU,WAAWP,CAAgBC,YAAAA,CAAAA,IAAS,EACzE,uBAAuBI,GACvB,gBAAgBC,EAGhB,CAAA;AAAA,SAAAI,EAAC,UAAA,EACC,eAAaC,GACbP,UAAAA,GACAD,SACAS,WAAWJ,GACXN,SAECH,GAAAA,UAAAA,EAAAA,CAAAA;AACH;"}