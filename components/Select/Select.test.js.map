{"version":3,"file":"Select.test.js","sources":["../../../lib/components/Select/Select.test.tsx"],"sourcesContent":["import {fireEvent, render, screen} from '@testing-library/react';\nimport {Select, SELECT_TEST_ID} from '@/components/Select/constants';\nimport {INPUT_TEST_ID} from '@/components/Input/constants';\nimport {selectOptionsMock} from '@/services/mocks';\n\nconst defaultProps = {\n  options: selectOptionsMock,\n  onClick: jest.fn(),\n  handleSelect: jest.fn(),\n  onClickToOptions: jest.fn(),\n  onChange: jest.fn(),\n  value: '',\n  isOpen: true,\n};\n\nconst selectOption = selectOptionsMock[0];\nconst optionSelector = '.select__option';\nconst notFoundOptionSelector = '.select__option_empty';\n\ndescribe('Select Component', () => {\n  const disabledOptions = [true, false];\n  const placeholderOptions = ['Select', undefined];\n  disabledOptions.forEach((disabled) => {\n    placeholderOptions.forEach((placeholder) => {\n      const disabledStatus = disabled ? 'is disabled' : 'is not disabled';\n      const hasPlaceholder = placeholder ? 'has a placeholder' : 'has no placeholder';\n      const testName = `should input ${disabledStatus} ${hasPlaceholder}`;\n      test(testName, () => {\n        const {container} = render(\n          <Select\n            {...defaultProps}\n            disabled={disabled}\n            placeholder={placeholder}\n          />,\n        );\n        const selectElement = screen.getByTestId(SELECT_TEST_ID);\n        const inputElement: HTMLInputElement = screen.getByTestId(INPUT_TEST_ID);\n        if (placeholder) {\n          expect(inputElement).toHaveAttribute('placeholder', placeholder);\n        }\n        expect(selectElement).toBeInTheDocument();\n        expect(inputElement.disabled).toBe(disabled);\n        if (disabled) {\n          expect(selectElement).toHaveClass('disabled');\n        }\n        expect(container).toMatchSnapshot();\n      });\n    });\n  });\n  test('calls onChange and handleSelect when input changes', () => {\n    const {container} = render(\n      <Select\n        {...defaultProps}\n        hasSearch\n      />,\n    );\n    const input = screen.getByTestId(INPUT_TEST_ID);\n    fireEvent.change(input, {target: {value: selectOption}});\n    expect(defaultProps.onChange).toHaveBeenCalledWith(selectOption);\n    expect(defaultProps.handleSelect).toHaveBeenCalledWith(true);\n    expect(container).toMatchSnapshot();\n  });\n  test('calls onClick when block is clicked', () => {\n    const {container} = render(<Select {...defaultProps} />);\n    const selectElement = screen.getByTestId(SELECT_TEST_ID);\n    const block = selectElement.querySelector('.select__block');\n    if (block) {\n      fireEvent.click(block);\n    }\n    expect(selectElement).toHaveClass('_open');\n    expect(defaultProps.onClick).toHaveBeenCalled();\n    expect(container).toMatchSnapshot();\n  });\n  test('filters options when hasSearch is true and value is typed', () => {\n    render(\n      <Select\n        {...defaultProps}\n        hasSearch\n        value=\"Another\"\n      />,\n    );\n    const options = screen.getByTestId(SELECT_TEST_ID).querySelectorAll(optionSelector);\n    expect(options.length).toBe(1);\n    expect(options[0].textContent).toBe('Another Option');\n  });\n  test('does not render list if search yields no match', () => {\n    const {container} = render(\n      <Select\n        {...defaultProps}\n        hasSearch\n        value=\"nonexistent\"\n      />,\n    );\n    const options = screen.getByTestId(SELECT_TEST_ID).querySelectorAll(optionSelector);\n    const nullOptionsFound = screen.getByTestId(SELECT_TEST_ID).querySelector(notFoundOptionSelector);\n\n    expect(options.length).toBe(1);\n    expect(nullOptionsFound).toBeInTheDocument();\n    expect(container).toMatchSnapshot();\n  });\n  test('closes list on outside click', () => {\n    render(<Select {...defaultProps} />);\n    fireEvent.mouseDown(document);\n    expect(defaultProps.handleSelect).toHaveBeenCalled();\n  });\n  test('displays the provided value in the input and highlights the corresponding option', () => {\n    const {container} = render(\n      <Select\n        {...defaultProps}\n        value={selectOption}\n      />,\n    );\n    const input = screen.getByTestId(INPUT_TEST_ID);\n    const options = Array.from(screen.getByTestId(SELECT_TEST_ID).querySelectorAll(optionSelector));\n    const activeOption = options.find((option) => option.textContent === selectOption);\n    expect(input).toHaveValue(selectOption);\n    expect(activeOption).toHaveClass('_selected');\n    expect(container).toMatchSnapshot();\n  });\n  test('opens the select when typing in the input', () => {\n    const {container} = render(\n      <Select\n        {...defaultProps}\n        hasSearch\n      />,\n    );\n    const input = screen.getByTestId(INPUT_TEST_ID);\n\n    fireEvent.change(input, {target: {value: selectOption}});\n    expect(defaultProps.isOpen).toBe(true);\n    expect(container).toMatchSnapshot();\n  });\n});\n"],"names":["defaultProps","selectOptionsMock","selectOption","optionSelector","notFoundOptionSelector","disabledOptions","placeholderOptions","disabled","placeholder","testName","container","render","jsx","Select","selectElement","screen","SELECT_TEST_ID","inputElement","INPUT_TEST_ID","input","fireEvent","block","options","nullOptionsFound","activeOption","option"],"mappings":"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"}