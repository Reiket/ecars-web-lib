{"version":3,"file":"FavButton.test.js","sources":["../../../lib/components/FavButton/FavButton.test.tsx"],"sourcesContent":["import {cleanup, fireEvent, render, screen} from '@testing-library/react';\nimport {FAV_BUTTON_TEST_ID, FAV_BUTTON_TYPE} from '@/components/FavButton/constants';\nimport {FavButton} from '@/components/FavButton/FavButton';\n\ndescribe('Fav Button component', () => {\n  afterEach(cleanup);\n\n  const types = Object.values(FAV_BUTTON_TYPE);\n  const disabledOptions = [true, false];\n\n  types.forEach((type) => {\n    disabledOptions.forEach((disabled) => {\n      const testName = `renders button with type ${type} and disabled`;\n      test(testName, () => {\n        const {container} = render(\n          <FavButton\n            type={type}\n            disabled={disabled}\n          />,\n        );\n        const favButtonElement: HTMLButtonElement = screen.getByTestId(FAV_BUTTON_TEST_ID);\n        expect(favButtonElement).toBeInTheDocument();\n        expect(favButtonElement).toHaveClass(`favorite-button--${type}`);\n        expect(favButtonElement.disabled).toBe(disabled);\n        expect(favButtonElement).toHaveStyle('cursor: default');\n        expect(container).toMatchSnapshot();\n      });\n    });\n  });\n\n  test('handles the click event', () => {\n    const onClick = jest.fn(); // Explicitly typing jest.fn\n    const {container} = render(\n      <FavButton\n        type=\"circle\"\n        onClick={onClick}\n      />,\n    );\n    fireEvent.click(screen.getByTestId(FAV_BUTTON_TEST_ID));\n    expect(onClick).toHaveBeenCalledTimes(1);\n    expect(container).toMatchSnapshot();\n  });\n\n  test('the onClick event does not fire when button is disabled', () => {\n    const onClick = jest.fn(); // Explicitly typing jest.fn\n    const {container} = render(\n      <FavButton\n        type=\"circle\"\n        disabled\n        onClick={onClick}\n      />,\n    );\n    fireEvent.click(screen.getByTestId(FAV_BUTTON_TEST_ID));\n    expect(onClick).not.toHaveBeenCalled();\n    expect(container).toMatchSnapshot();\n  });\n\n  test('the active state when has prop isFavorite', () => {\n    const onClick = jest.fn(); // Explicitly typing jest.fn\n    const {container} = render(\n      <FavButton\n        type=\"circle\"\n        isFavorite\n        disabled\n        onClick={onClick}\n      />,\n    );\n    expect(screen.getByTestId(FAV_BUTTON_TEST_ID)).toHaveClass('active');\n    expect(container).toMatchSnapshot();\n  });\n\n  test('renders correct icon based on isFavorite prop', () => {\n    const {rerender} = render(\n      <FavButton\n        type=\"circle\"\n        isFavorite\n      />,\n    );\n    expect(screen.getByTestId(FAV_BUTTON_TEST_ID)).toContainHTML('<svg');\n\n    rerender(\n      <FavButton\n        type=\"circle\"\n        isFavorite={false}\n      />,\n    );\n    expect(screen.getByTestId(FAV_BUTTON_TEST_ID)).toContainHTML('<svg');\n  });\n});\n"],"names":["cleanup","types","FAV_BUTTON_TYPE","disabledOptions","type","disabled","testName","container","render","jsx","FavButton","favButtonElement","screen","FAV_BUTTON_TEST_ID","onClick","fireEvent","rerender"],"mappings":";;;;AAIA,SAAS,wBAAwB,MAAM;AACrC,YAAUA,CAAO;AAEX,QAAAC,IAAQ,OAAO,OAAOC,CAAe,GACrCC,IAAkB,CAAC,IAAM,EAAK;AAE9B,EAAAF,EAAA,QAAQ,CAACG,MAAS;AACN,IAAAD,EAAA,QAAQ,CAACE,MAAa;AAC9B,YAAAC,IAAW,4BAA4BF,CAAI;AACjD,WAAKE,GAAU,MAAM;AACb,cAAA,EAAC,WAAAC,MAAaC;AAAA,UAClB,gBAAAC;AAAA,YAACC;AAAA,YAAA;AAAA,cACC,MAAAN;AAAA,cACA,UAAAC;AAAA,YAAA;AAAA,UAAA;AAAA,QAEJ,GACMM,IAAsCC,EAAO,YAAYC,CAAkB;AAC1E,eAAAF,CAAgB,EAAE,kBAAkB,GAC3C,OAAOA,CAAgB,EAAE,YAAY,oBAAoBP,CAAI,EAAE,GAC/D,OAAOO,EAAiB,QAAQ,EAAE,KAAKN,CAAQ,GACxC,OAAAM,CAAgB,EAAE,YAAY,iBAAiB,GAC/C,OAAAJ,CAAS,EAAE,gBAAgB;AAAA,MAAA,CACnC;AAAA,IAAA,CACF;AAAA,EAAA,CACF,GAED,KAAK,2BAA2B,MAAM;AAC9B,UAAAO,IAAU,KAAK,GAAG,GAClB,EAAC,WAAAP,MAAaC;AAAA,MAClB,gBAAAC;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAAI;AAAA,QAAA;AAAA,MAAA;AAAA,IAEJ;AACA,IAAAC,EAAU,MAAMH,EAAO,YAAYC,CAAkB,CAAC,GAC/C,OAAAC,CAAO,EAAE,sBAAsB,CAAC,GAChC,OAAAP,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GAED,KAAK,2DAA2D,MAAM;AAC9D,UAAAO,IAAU,KAAK,GAAG,GAClB,EAAC,WAAAP,MAAaC;AAAA,MAClB,gBAAAC;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAQ;AAAA,UACR,SAAAI;AAAA,QAAA;AAAA,MAAA;AAAA,IAEJ;AACA,IAAAC,EAAU,MAAMH,EAAO,YAAYC,CAAkB,CAAC,GAC/C,OAAAC,CAAO,EAAE,IAAI,iBAAiB,GAC9B,OAAAP,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GAED,KAAK,6CAA6C,MAAM;AAChD,UAAAO,IAAU,KAAK,GAAG,GAClB,EAAC,WAAAP,MAAaC;AAAA,MAClB,gBAAAC;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,YAAU;AAAA,UACV,UAAQ;AAAA,UACR,SAAAI;AAAA,QAAA;AAAA,MAAA;AAAA,IAEJ;AACA,WAAOF,EAAO,YAAYC,CAAkB,CAAC,EAAE,YAAY,QAAQ,GAC5D,OAAAN,CAAS,EAAE,gBAAgB;AAAA,EAAA,CACnC,GAED,KAAK,iDAAiD,MAAM;AACpD,UAAA,EAAC,UAAAS,MAAYR;AAAA,MACjB,gBAAAC;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,YAAU;AAAA,QAAA;AAAA,MAAA;AAAA,IAEd;AACA,WAAOE,EAAO,YAAYC,CAAkB,CAAC,EAAE,cAAc,MAAM,GAEnEG;AAAA,MACE,gBAAAP;AAAA,QAACC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,YAAY;AAAA,QAAA;AAAA,MAAA;AAAA,IAEhB,GACA,OAAOE,EAAO,YAAYC,CAAkB,CAAC,EAAE,cAAc,MAAM;AAAA,EAAA,CACpE;AACH,CAAC;"}