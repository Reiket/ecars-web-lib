@use "sass:math";
@use "sass:map";
@use "colors" as *;
//Percent
@function percent($px, $from) {
  $result: math.div($px, $from) * 100%;
  @return $result;
}

@function get-color($colors, $color-name) {
  @return map-get($colors, $color-name);
}

@function get-color($colors, $color-name) {
  @return map.get($colors, $color-name);
}

//REM
@function rem($px) {
  $result: math.div($px, 16) + rem;
  @return $result;
}
//EM
@function em($px, $current: 16) {
  $result: math.div($px, $current) + em;
  @return $result;
}

@mixin inputState() {
  background: get-color($fieldsColor, "state-background");
  &:not(&.error) {
    border-color: get-color($fieldsColor, "state-border");
  }
}

@mixin customScroll() {
  &::-webkit-scrollbar,
  &::-webkit-scrollbar-thumb {
    width: rem(13);
    border-radius: rem(10);
    background-clip: padding-box;
    border: rem(4) solid transparent;
  }
  &::-webkit-scrollbar-thumb {
    transition: box-shadow 0.3s linear;
    box-shadow: inset 0 0 0 rem(10) $scrollColor;
  }
}

@mixin inputStyles() {
  transition: all 0.4s linear;
  border: rem(1) solid get-color($fieldsColor, "border");
  &:focus {
    @include inputState;
    box-shadow: rem(0) rem(2) rem(8) rem(0) get-color($fieldsColor, "shadow");
  }
  &.error {
    color: $errorColor;
    border-color: $errorColor;
  }
}
