{"version":3,"file":"constants-DIsb-mTS.js","sources":["../lib/components/Checkbox/CheckboxComponent.tsx","../lib/components/Checkbox/components/CheckboxBlock.tsx","../lib/components/Checkbox/components/CheckboxInput.tsx","../lib/components/Checkbox/constants.ts"],"sourcesContent":["import type {FC} from 'react';\r\nimport {Checkbox, CheckboxProps} from '@/components/Checkbox/constants';\r\n\r\nexport const CheckboxComponent: FC<CheckboxProps> = ({id, block, ...props}) => {\r\n  return (\r\n    <Checkbox.Block\r\n      htmlFor={id}\r\n      block={block}\r\n    >\r\n      <Checkbox.Input\r\n        {...props}\r\n        id={id}\r\n      />\r\n      <Checkbox.Indicator />\r\n    </Checkbox.Block>\r\n  );\r\n};\r\n","import type {FC, ReactNode} from 'react';\r\nimport {CHECKBOX_TEST_ID} from '@/components/Checkbox/constants';\r\nimport {ElementProps} from '@/services/types';\r\nimport {cn} from '@/services/helpers';\r\n\r\ninterface Props extends ElementProps {\r\n  htmlFor?: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CheckboxBlock: FC<Props> = ({children, block, htmlFor = 'checkbox'}) => {\r\n  const classNames = cn(block, 'checkbox');\r\n  return (\r\n    <label\r\n      data-testid={CHECKBOX_TEST_ID}\r\n      className={classNames}\r\n      htmlFor={htmlFor}\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n","import {type ChangeEvent, FC} from 'react';\r\nimport {cn} from '@/services/helpers';\r\nimport {CHECKBOX_TEST_INPUT_ID, CheckboxProps} from '@/components/Checkbox/constants';\r\n\r\nexport const CheckboxInput: FC<CheckboxProps> = ({\r\n  onChange,\r\n  id = 'checkbox',\r\n  checked = false,\r\n  disabled = false,\r\n  name = 'checkbox',\r\n  hasError = false,\r\n}) => {\r\n  const classNames = cn('', 'checkbox__input', {\r\n    'error': hasError,\r\n  });\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (onChange) onChange(e.target.checked);\r\n  };\r\n  return (\r\n    <input\r\n      data-testid={CHECKBOX_TEST_INPUT_ID}\r\n      name={name}\r\n      disabled={disabled}\r\n      className={classNames}\r\n      checked={checked}\r\n      onChange={handleChange}\r\n      id={id}\r\n      type=\"checkbox\"\r\n    />\r\n  );\r\n};\r\n","import {CheckboxComponent} from '@/components/Checkbox/CheckboxComponent';\r\nimport {CheckboxIndicator} from '@/components/Checkbox/components/CheckboxIndicator';\r\nimport {CheckboxBlock} from '@/components/Checkbox/components/CheckboxBlock';\r\nimport {CheckboxInput} from '@/components/Checkbox/components/CheckboxInput';\r\nimport {ElementProps} from '@/services/types';\r\n\r\nexport const Checkbox = Object.assign(CheckboxComponent, {\r\n  Block: CheckboxBlock,\r\n  Indicator: CheckboxIndicator,\r\n  Input: CheckboxInput,\r\n});\r\n\r\nexport interface CheckboxProps extends ElementProps {\r\n  name?: string;\r\n  id?: string;\r\n  disabled?: boolean;\r\n  onChange?: (checked: boolean) => void;\r\n  checked?: boolean;\r\n  hasError?: boolean;\r\n}\r\n\r\nexport const CHECKBOX_TEST_ID = 'checkboxTestId';\r\nexport const CHECKBOX_TEST_INPUT_ID = 'checkboxTestInputId';\r\n"],"names":["CheckboxComponent","id","block","props","jsxs","Checkbox","Block","htmlFor","children","jsx","Input","Indicator","CheckboxBlock","classNames","cn","CHECKBOX_TEST_ID","className","e","CheckboxInput","onChange","checked","r","disabled","s","name","a","hasError","error","CHECKBOX_TEST_INPUT_ID","target","type","Object","assign","CheckboxIndicator"],"mappings":";;;AAGO,MAAMA,IAAuC,CAAA,EAAEC,IAAIC,GAAAA,OAAAA,GAAAA,GAAUC,EAEhEC,MAAAA,EAACC,EAASC,OAAT,EACCC,SAASN,GACTC,OAEAM,GAAAA,UAAA,CAAAC,EAACJ,EAASK,OAAT,EACKP,GAAAA,GACJF,IAEFQ,EAAAA,CAAAA,GAAAA,EAACJ,EAASM,WAAT,CAAmB,CCHbC,CAAAA,EAAAA,CAAAA,GAAAA,IAA2B,CAAEJ,EAAAA,UAAAA,GAAUN,OAAOK,GAAAA,SAAAA,IAAU,WAC7D,MAAA;AAAA,QAAAM,IAAaC,EAAGZ,GAAO,UAAA;AAE3B,SAAAO,EAAC,SAAA,EACC,eAAaM,GACbC,WAAWH,GACXN,SAAAA,GAECC,UACHS,EAAA,CAAA;AAAA,GCfSC,IAAmC,CAAA,EAC9CC,UACAlB,GAAAA,IAAAA,IAAK,YACLmB,SAAUC,IAAA,IACVC,UAAWC,IAAA,IACXC,MAAOC,IAAA,YACPC,UAAW,IAAA,GAAA,MAAA;AAEL,QAAAb,IAAaC,EAAG,IAAI,mBAAmB,EAC3Ca,OAASD,EAMT,CAAA;AAAA,SAAAjB,EAAC,SAAA,EACC,eAAamB,GACbJ,MAAAA,GACAF,UACAN,GAAAA,WAAWH,GACXO,SAAAA,GACAD,UAVkBF,CAAAA,MAAAA;AAChBE,IAAAA,KAAUA,EAASF,EAAEY,OAAOT,OAAAA;AAAAA,EAAO,GAUrCnB,IAAAA,GACA6B,MAAK,WAAA,CAAA;AACP,GCtBSzB,IAAW0B,OAAOC,OAAOhC,GAAmB,EACvDM,OAAOM,GACPD,WAAWsB,GACXvB,OAAOQ,EAAAA,CAAAA,GAYIH,IAAmB,kBACnBa,IAAyB;"}