{"version":3,"file":"constants-BpEmf5Np.js","sources":["../lib/components/Field/FieldComponent.tsx","../lib/components/Field/components/FieldLabel.tsx","../lib/components/Field/constants.ts"],"sourcesContent":["import type {FC, ReactElement} from 'react';\nimport {cloneElement} from 'react';\nimport {Field, FIELD_TEST_ID} from '@/components/Field/constants';\nimport type {ElementProps} from '@/services/types';\nimport {cn} from '@/services/helpers';\n\nexport interface Props extends ElementProps {\n  children: ReactElement;\n  id?: string;\n  label?: string;\n  error?: string;\n}\n\nexport const FieldComponent: FC<Props> = ({label, block, children, error, id = 'input'}) => {\n  const classNames = cn(block, 'field');\n  return (\n    <div\n      data-testid={FIELD_TEST_ID}\n      className={classNames}\n    >\n      {!!label && (\n        <Field.Label\n          text={label}\n          htmlFor={id}\n        />\n      )}\n      {cloneElement(children, {id, hasError: !!error})}\n      {!!error && <Field.Error errorText={error} />}\n    </div>\n  );\n};\n","import type {FC} from 'react';\nimport {FIELD_LABEL_TEST_ID} from '@/components/Field/constants';\n\nexport interface Props {\n  htmlFor?: string;\n  text: string;\n}\n\nexport const FieldLabel: FC<Props> = ({text, htmlFor = 'input'}) => {\n  return (\n    <label\n      data-testid={FIELD_LABEL_TEST_ID}\n      className=\"field__label\"\n      htmlFor={htmlFor}\n    >\n      {text}\n    </label>\n  );\n};\n","import {FieldComponent} from '@/components/Field/FieldComponent';\nimport {FieldError} from '@/components/Field/components/FieldError';\nimport {FieldLabel} from '@/components/Field/components/FieldLabel';\n\nexport const Field = Object.assign(FieldComponent, {\n  Label: FieldLabel,\n  Error: FieldError,\n});\n\nexport const FIELD_TEST_ID = 'fieldTestId';\nexport const FIELD_LABEL_TEST_ID = 'fieldLabelTestId';\n"],"names":["FieldComponent","label","block","children","error","id","classNames","cn","jsxs","FIELD_TEST_ID","jsx","Field","cloneElement","FieldLabel","text","htmlFor","FIELD_LABEL_TEST_ID","FieldError"],"mappings":";;;;AAaa,MAAAA,IAA4B,CAAC,EAAC,OAAAC,GAAO,OAAAC,GAAO,UAAAC,GAAU,OAAAC,GAAO,IAAAC,IAAK,cAAa;AACpF,QAAAC,IAAaC,EAAGL,GAAO,OAAO;AAElC,SAAA,gBAAAM;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAaC;AAAA,MACb,WAAWH;AAAA,MAEV,UAAA;AAAA,QAAA,CAAC,CAACL,KACD,gBAAAS;AAAA,UAACC,EAAM;AAAA,UAAN;AAAA,YACC,MAAMV;AAAA,YACN,SAASI;AAAA,UAAA;AAAA,QACX;AAAA,QAEDO,EAAaT,GAAU,EAAC,IAAAE,GAAI,UAAU,CAAC,CAACD,GAAM;AAAA,QAC9C,CAAC,CAACA,KAAS,gBAAAM,EAACC,EAAM,OAAN,EAAY,WAAWP,EAAO,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAC7C;AAEJ,GCtBaS,IAAwB,CAAC,EAAC,MAAAC,GAAM,SAAAC,IAAU,cAEnD,gBAAAL;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,eAAaM;AAAA,IACb,WAAU;AAAA,IACV,SAAAD;AAAA,IAEC,UAAAD;AAAA,EAAA;AACH,GCZSH,IAAQ,OAAO,OAAOX,GAAgB;AAAA,EACjD,OAAOa;AAAA,EACP,OAAOI;AACT,CAAC,GAEYR,IAAgB,eAChBO,IAAsB;"}